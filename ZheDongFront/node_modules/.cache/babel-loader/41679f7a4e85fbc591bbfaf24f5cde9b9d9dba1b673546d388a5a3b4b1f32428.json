{"ast":null,"code":"export default {\n  name: \"CityManage\",\n  components: {},\n  mounted: function () {\n    // 查询左侧的一个诗人栏\n    this.queryPeople();\n    this.queryCity();\n    //在页面打开后先将城市的信息放入选择框中\n    // this.$http.get(\"Province\")\n    //   .then(response=>{\n    //     this.CityDate = response.data\n\n    //     for(let i = 0; i < this.CityDate.length; i++){\n    //         var tmp = {}\n    //         tmp.value = (i+1).toString()\n    //         tmp.label = this.CityDate[i].province\n    //         this.options.push(tmp)\n\n    //         //通过省份查询城市\n    //         this.$http.get(\"City\",{\n    //           params: {\n    //             province : this.CityDate[i].province\n    //           }\n    //         })\n    //         .then(response=>{\n    //           var children = []\n    //           for(let n = 0; n < response.data.length; n++){\n    //             var tmp = {}\n    //             tmp.value = (n+1).toString()\n    //             tmp.label = response.data[n].cname\n    //             children.push(tmp)\n    //           }\n    //           this.options[i].children = children\n    //           // console.log(children)\n    //         })\n    //     }   \n    //     //将获得的信息添加到option数组对象当中\n    //     console.log(this.options)  \n    //   })\n    //   .catch(function(error){\n    //     console.log(error)\n    // })\n  },\n\n  data() {\n    return {\n      PeopleValue: \"\",\n      //第一个选择器中诗人的值\n      CityValue: \"\",\n      //第二个选择器中城市的值\n      GroupValue: \"\",\n      //第三个选择器中组的值\n      ExperienceValue: \"\",\n      //第四个选择器诗人经历的值\n\n      peopleName: [],\n      //选择器中的诗人姓名\n      cityName: [],\n      //选择器中的城市名称\n      groupName: [],\n      //选择器中的诗人城市组名称\n\n      options: [{\n        value: 'zhinan',\n        label: '指南',\n        children: [{\n          value: 'shejiyuanze',\n          label: '设计原则'\n        }]\n      }],\n      //--------------Group的设置\n      multipleSelectionG: [],\n      GroupData: [],\n      //所有诗人城市组信息\n      currentPageG: 1,\n      //当前的\n      countG: 0,\n      //分页查询页面总数\n      pageNumG: 1,\n      //\n      pageSizeG: 100,\n      //默认的分页大小\n      addVisibleG: false,\n      //添加的显示框\n      updateVisibleG: false,\n      //更新的显示框\n      formG: {\n        peopleId: Number,\n        //诗人外键\n        cityId: Number,\n        //城市外键\n        beginYear: '',\n        // 开始年份\n        endYear: '' // 结束年份\n      },\n\n      //--------------Experience的设置\n      multipleSelectionE: [],\n      ExperienceData: [],\n      //所有诗人城市组信息\n      currentPageE: 1,\n      //当前的\n      countE: 0,\n      //分页查询页面总数\n      pageNumE: 1,\n      //\n      pageSizeE: 100,\n      //默认的分页大小\n      addVisibleE: false,\n      //添加的显示框\n      updateVisibleE: false,\n      //更新的显示框\n      formE: {\n        groupId: Number,\n        //诗人城市组外键\n        beginYear: '',\n        // 开始年份\n        endYear: '',\n        // 结束年份\n        document: '' //诗人经历\n      },\n\n      //--------------Poem的设置\n      multipleSelectionP: [],\n      PoemData: [],\n      //所有诗人城市组信息\n      currentPageP: 1,\n      //当前的\n      countP: 0,\n      //分页查询页面总数\n      pageNumP: 1,\n      //\n      pageSizeP: 100,\n      //默认的分页大小\n      addVisibleP: false,\n      //添加的显示框\n      updateVisibleP: false,\n      //更新的显示框\n      formP: {\n        experienceId: \"\",\n        //经验外键\n        poemTitle: \"\",\n        //诗歌题目\n        content: \"\",\n        // 诗歌内容\n        dynasty: '',\n        // 诗歌朝代\n        year: '',\n        // 结束年份\n        source: '',\n        //诗人经历\n        type: '' //诗歌内形\n      }\n    };\n  },\n\n  methods: {\n    //选择器改变时 \n    displayDiv1(val) {\n      this.formG.peopleId = this.PeopleValue.id;\n      if (this.PeopleValue.name != undefined && this.CityValue.cname != undefined && this.GroupValue.id == undefined) {\n        this.queryGroup();\n      }\n    },\n    displayDiv2(val) {\n      // console.log(this.CityValue.id)\n      this.formG.cityId = this.CityValue.id;\n      if (this.PeopleValue.name != undefined && this.CityValue.cname != undefined && this.GroupValue.id == undefined) {\n        this.queryGroup();\n      }\n\n      // if(this.CityValue.length == 0){\n      //   return\n      // }\n\n      // const checkedNodes = this.$refs['cascaderAddr'].getCheckedNodes() // 获取当前点击的节点\n      // var cname = checkedNodes[0].data.label\n      // console.log(cname)\n\n      // console.log(checkedNodes)\n      // console.log(checkedNodes[0].data.label) // 获取当前点击的节点的label\n\n      // console.log(checkedNodes[0].pathLabels) // 获取由 label 组成的数组\n    },\n\n    displayDiv3(val) {\n      this.formE.groupId = this.GroupValue.id;\n      this.queryExperience();\n    },\n    displayDiv4(val) {\n      this.querySceneryByPeopleName();\n    },\n    //查询诗人信息\n    queryPeople() {\n      this.$http.get(\"people\").then(response => {\n        this.peopleName = response.data;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    queryCity() {\n      this.$http.get(\"City\").then(response => {\n        this.cityName = response.data;\n        // console.log(this.cityName)\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    queryGroup() {\n      this.$http.get(\"queryGroupByPeopleAndCityPage\", {\n        params: {\n          pageNum: this.pageNumG,\n          pageSize: this.pageSizeG,\n          name: this.PeopleValue.name,\n          cname: this.CityValue.cname\n        }\n      }).then(response => {\n        this.GroupData = response.data.data;\n        this.countG = response.data.count;\n        this.groupName = this.GroupData;\n        console.log(this.groupName);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    queryExperience() {\n      this.$http.get(\"queryExperienceByGroupIdPage\", {\n        params: {\n          pageNum: this.pageNumE,\n          pageSize: this.pageSizeE,\n          groupId: this.GroupValue.id\n        }\n      }).then(response => {\n        this.ExperienceData = response.data.data;\n        this.countE = response.data.count;\n        // this.groupName = this.GroupData\n        // console.log(this.groupName)\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    //监听操作按钮\n    handleEditG(index, row) {\n      this.updateVisibleG = true;\n      this.formG = row;\n      // console.log(index, row);\n    },\n\n    //删除操作\n    //删除按钮\n    handleDeleteG(index, row) {\n      // console.log(row.id);\n      this.$confirm('此操作将永久删除该条信息, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$http.delete(\"/Egroup/\" + row.id).then(res => {\n          if (res) {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n            this.queryGroup();\n          }\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    //批量删除\n    handleSelectionChangeG(val) {\n      this.multipleSelectionG = val;\n      // console.log(this.multipleSelectionG)\n    },\n\n    deleteMultipleGroup() {\n      let ids = this.multipleSelectionG.map(v => v.id);\n      this.$confirm('此操作将永久删除该条信息, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$http.post(\"/Egroup/batch\", ids).then(res => {\n          if (res) {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n            this.queryGroup();\n          }\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    //监听pageNum\n    handleCurrentChangeG(pageNum) {\n      // console.log(pageNum);\n      this.pageNumG = pageNum;\n      this.queryGroup();\n    },\n    //监听pageSize的\n    handleSizeChangeG(pageSize) {\n      // console.log(pageSize);\n      this.pageSizeG = pageSize;\n      this.queryGroup();\n    },\n    //添加窗体的操作\n    //清空\n    clearInputG() {\n      this.formG.beginYear = '';\n      this.formG.endYear = '';\n    },\n    //添加和更新城市的函数\n    saveGroup() {\n      this.$http.post(\"saveEgroup\", this.formG).then(res => {\n        if (res) {\n          this.$message.success('保存成功');\n          this.addVisibleG = false;\n          this.updateVisibleG = false;\n        } else {\n          this.$message.error(\"保存失败\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.queryGroup();\n    },\n    //添加城市信息\n    addGroup() {\n      this.saveGroup();\n      this.queryGroup();\n      this.clearFormG();\n    },\n    //更新城市信息\n    updateGroup() {\n      this.saveGroup();\n      this.queryGroup();\n      this.clearFormG();\n    },\n    //清空form中信息\n    clearFormG() {\n      this.formG.id = null, this.formG.peopleId = this.PeopleValue.id, this.formG.cityId = this.CityValue.id, this.formG.beginYear = \"\", this.formG.endYear = \"\";\n    },\n    // diolag点击叉叉后\n    resetG() {\n      this.clearFormG();\n      this.queryGroup();\n    },\n    // 新增的按钮\n    addButtonG() {\n      console.log(this.value);\n      if (this.PeopleValue.id == null || this.CityValue.id == null) {\n        this.$message('请先选择诗人和城市');\n      } else {\n        this.addVisibleG = true;\n      }\n    },\n    //批量删除按钮\n    deleteButtonG() {\n      this.deleteMultipleGroup();\n    },\n    //Experience-----------------------------------------------------\n    //返回的是label\n    change(item) {\n      if (item.endYear == null) {\n        return item.beginYear;\n      } else {\n        return item.beginYear.toString() + ' - ' + item.endYear.toString();\n      }\n    },\n    //监听操作按钮\n    handleEditE(index, row) {\n      this.updateVisibleE = true;\n      this.formE = row;\n      // console.log(index, row);\n    },\n\n    //删除操作\n    //删除按钮\n    handleDeleteE(index, row) {\n      // console.log(row.id);\n      this.$confirm('此操作将永久删除该条信息, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$http.delete(\"/Experience/\" + row.id).then(res => {\n          if (res) {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n            this.queryExperience();\n          }\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    //批量删除\n    handleSelectionChangeE(val) {\n      this.multipleSelectionE = val;\n      // console.log(this.multipleSelectionG)\n    },\n\n    deleteMultipleGroup() {\n      let ids = this.multipleSelectionE.map(v => v.id);\n      this.$confirm('此操作将永久删除该条信息, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$http.post(\"/Experience/batch\", ids).then(res => {\n          if (res) {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n            this.queryExperience();\n          }\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    //监听pageNum\n    handleCurrentChangeE(pageNum) {\n      // console.log(pageNum);\n      this.pageNumE = pageNum;\n      this.queryExperience();\n    },\n    //监听pageSize的\n    handleSizeChangeE(pageSize) {\n      // console.log(pageSize);\n      this.pageSizeE = pageSize;\n      this.queryExperience();\n    },\n    //添加窗体的操作\n    //清空\n    clearInputE() {\n      this.formE.beginYear = '';\n      this.formE.endYear = '';\n      this.formE.document = '';\n    },\n    //添加和更新城市的函数\n    saveExperience() {\n      this.$http.post(\"saveExperience\", this.formE).then(res => {\n        if (res) {\n          this.$message.success('保存成功');\n          this.addVisibleE = false;\n          this.updateVisibleE = false;\n        } else {\n          this.$message.error(\"保存失败\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.queryExperience();\n    },\n    //添加城市信息\n    addExperience() {\n      this.saveExperience();\n      this.queryExperience();\n      this.clearFormE();\n    },\n    //更新城市信息\n    updateExperience() {\n      this.saveExperience();\n      this.queryExperience();\n      this.clearFormE();\n    },\n    //清空form中信息\n    clearFormE() {\n      this.formE.id = null, this.formE.groupId = this.GroupValue.id, this.formE.beginYear = \"\", this.formE.endYear = \"\", this.formE.document = \"\";\n    },\n    // diolag点击叉叉后\n    resetE() {\n      this.clearFormE();\n      this.queryExperience();\n    },\n    // 新增的按钮\n    addButtonE() {\n      // console.log(\"GroupSelect\")\n      if (this.PeopleValue.id == null || this.CityValue.id == null) {\n        this.$message('请先选择诗人和城市');\n      } else {\n        this.addVisibleE = true;\n      }\n    },\n    //批量删除按钮\n    deleteButtonE() {\n      this.deleteMultipleGroup();\n    }\n    //Poem -----------------------------------------------------\n  },\n\n  watched: {}\n};","map":{"version":3,"mappings":"AAkTA;EACAA;EACAC,aACA;EACAC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;;EAEAC;IACA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;;MAEAC;MAAA;MACAC;MAAA;MACAC;MAAA;;MAEAC;QACAC;QACAC;QACAC;UACAF;UACAC;QACA;MACA;MAEA;MACAE;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;QACAC;QAAA;QACAC;QAAA;QACAC;QAAA;QACAC;MACA;;MACA;MACAC;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;QACAC;QAAA;QACAX;QAAA;QACAC;QAAA;QACAW;MACA;;MACA;MACAC;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;QACAC;QAAA;QACAC;QAAA;QACAC;QAAA;QACAC;QAAA;QACAC;QAAA;QACAC;QAAA;QACAC;MACA;IACA;EACA;;EAEAC;IACA;IACAC;MAEA;MACA;QACA;MACA;IACA;IACAC;MACA;MACA;MACA;QACA;MAEA;;MAEA;MACA;MACA;;MAEA;MACA;MACA;;MAEA;MACA;;MAEA;IACA;;IACAC;MACA;MACA;IAEA;IACAC;MAEA;IACA;IAEA;IACAC;MACA,yBACAC;QACA;MACA,GACAC;QACAC;MACA;IACA;IACAC;MACA,uBACAH;QACA;QACA;MACA,GACAC;QACAC;MACA;IACA;IACAE;MACA;QAAAC;UACAC;UACAC;UACApE;UACAqE;QACA;MAAA,GACAR;QACA;QACA;QACA;QACAE;MACA,GACAD;QACAC;MACA;IAEA;IACAO;MACA;QAAAJ;UACAC;UACAC;UACA/B;QAEA;MAAA,GACAwB;QACA;QACA;QACA;QACA;MACA,GACAC;QACAC;MACA;IACA;IACA;IACAQ;MACA;MACA;MACA;IACA;;IACA;IACA;IACAC;MACA;MACA;QACAC;QACAC;QACApB;MACA;QACA;UACA;YACA;cACAA;cACAqB;YACA;YACA;UACA;QACA;MACA;QACA;UACArB;UACAqB;QACA;MACA;IACA;IACA;IACAC;MACA;MACA;IACA;;IACAC;MACA;MACA;QACAJ;QACAC;QACApB;MACA;QACA;UACA;YACA;cACAA;cACAqB;YACA;YACA;UACA;QACA;MACA;QACA;UACArB;UACAqB;QACA;MACA;IACA;IACA;IACAG;MACA;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA,0CACApB;QACA;UACA;UACA;UACA;QACA,OACA;UACA;QACA;MACA,GACAC;QACAC;MACA;MACA;IACA;IACA;IACAmB;MACA;MACA;MACA;IACA;IACA;IACAC;MAEA;MACA;MACA;IACA;IACA;IACAC;MACA,sBACA,2CACA,uCACA,2BACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACAvB;MACA;QACA;MACA,OACA;QACA;MACA;IACA;IACA;IACAwB;MACA;IACA;IAEA;IACA;IACAC;MACA;QACA;MACA,OACA;QACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;IACA;;IACA;IACA;IACAC;MACA;MACA;QACAjB;QACAC;QACApB;MACA;QACA;UACA;YACA;cACAA;cACAqB;YACA;YACA;UACA;QACA;MACA;QACA;UACArB;UACAqB;QACA;MACA;IACA;IACA;IACAgB;MACA;MACA;IACA;;IACAd;MACA;MACA;QACAJ;QACAC;QACApB;MACA;QACA;UACA;YACA;cACAA;cACAqB;YACA;YACA;UACA;QACA;MACA;QACA;UACArB;UACAqB;QACA;MACA;IACA;IACA;IACAiB;MACA;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACA;IACAC;MACA,8CACAlC;QACA;UACA;UACA;UACA;QACA,OACA;UACA;QACA;MACA,GACAC;QACAC;MACA;MACA;IACA;IACA;IACAiC;MACA;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACA;IACAC;MACA,sBACA,yCACA,2BACA,yBACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;QACA;MACA,OACA;QACA;MACA;IACA;IACA;IACAC;MACA;IACA;IACA;EACA;;EAEAC,UAEA;AACA","names":["name","components","mounted","data","PeopleValue","CityValue","GroupValue","ExperienceValue","peopleName","cityName","groupName","options","value","label","children","multipleSelectionG","GroupData","currentPageG","countG","pageNumG","pageSizeG","addVisibleG","updateVisibleG","formG","peopleId","cityId","beginYear","endYear","multipleSelectionE","ExperienceData","currentPageE","countE","pageNumE","pageSizeE","addVisibleE","updateVisibleE","formE","groupId","document","multipleSelectionP","PoemData","currentPageP","countP","pageNumP","pageSizeP","addVisibleP","updateVisibleP","formP","experienceId","poemTitle","content","dynasty","year","source","type","methods","displayDiv1","displayDiv2","displayDiv3","displayDiv4","queryPeople","then","catch","console","queryCity","queryGroup","params","pageNum","pageSize","cname","queryExperience","handleEditG","handleDeleteG","confirmButtonText","cancelButtonText","message","handleSelectionChangeG","deleteMultipleGroup","handleCurrentChangeG","handleSizeChangeG","clearInputG","saveGroup","addGroup","updateGroup","clearFormG","resetG","addButtonG","deleteButtonG","change","handleEditE","handleDeleteE","handleSelectionChangeE","handleCurrentChangeE","handleSizeChangeE","clearInputE","saveExperience","addExperience","updateExperience","clearFormE","resetE","addButtonE","deleteButtonE","watched"],"sourceRoot":"src/view/back/RouterMain/PeoplePoem","sources":["PeoplePoemManage.vue"],"sourcesContent":["<template>\n    <div>\n      <el-container>\n          <!-- 主页面查询 -->\n          <el-main>\n               <div style=\"margin-bottom:15px\">\n                <!-- 选择器 选择诗人 -->\n                请选择诗人\n                <el-select v-model=\"PeopleValue\" value-key=\"name\" filterable placeholder=\"请选择\" @change=\"displayDiv1\" clearable>\n                  <el-option\n                    v-for=\"item in peopleName\"\n                    :key=\"item.id\"\n                    :label=\"item.name\"\n                    :value=\"item\"\n                    >\n                  </el-option>\n                </el-select>\n\n                请选择城市\n                <!-- <el-cascader ref=\"cascaderAddr\" v-model=\"CityValue\" :options=\"options\" :show-all-levels=\"false\" clearable @change=\"displayDiv2\" ></el-cascader> -->\n                <el-select v-model=\"CityValue\" value-key=\"cname\" filterable placeholder=\"请选择\" @change=\"displayDiv2\" clearable>\n                  <el-option\n                    v-for=\"item in cityName\"\n                    :key=\"item.id\"\n                    :label=\"item.cname\"\n                    :value=\"item\"\n                    >\n                  </el-option>\n                </el-select>\n                <br>\n\n                请选择组选\n                <el-select v-model=\"GroupValue\" value-key=\"beginYear\" filterable placeholder=\"请选择\" @change=\"displayDiv3\" clearable>\n                  <el-option\n                    v-for=\"item in groupName\"\n                    :key=\"item.id\"\n                    :label=\"change(item)\"\n                    :value=\"item\"\n                    >\n                  </el-option>\n                </el-select>\n                请选择经历\n                <el-select v-model=\"ExperienceValue\" value-key=\"name\" filterable placeholder=\"请选择\" @change=\"displayDiv4\">\n                  <el-option\n                    v-for=\"item in peopleName\"\n                    :key=\"item.id\"\n                    :label=\"item.name\"\n                    :value=\"item\"\n                    >\n                  </el-option>\n                </el-select>\n                  <div style=\"margin-top:10px\" v-if=\"this.CityValue.id != undefined && this.PeopleValue.id != undefined && this.GroupValue.id == undefined && this.PoemValue.id == undefined\">\n                    <el-button type=\"primary\" style=\"margin-left:20px\" @click=\"addButtonG\"><i class=\"el-icon-plus\"></i>新增</el-button>\n                    <el-button type=\"primary\" @click=\"deleteButtonG\"><i class=\"el-icon-plus\"></i>批量删除</el-button>\n                  </div>\n                  <div style=\"margin-top:10px\" v-if=\"this.CityValue.id != undefined && this.PeopleValue.id != undefined && this.GroupValue.id != undefined && this.PoemValue.id == undefined\">\n                    <el-button type=\"primary\" style=\"margin-left:20px\" @click=\"addButtonE\"><i class=\"el-icon-plus\"></i>新增</el-button>\n                    <el-button type=\"primary\" @click=\"deleteButtonE\"><i class=\"el-icon-plus\"></i>批量删除</el-button>\n                  </div>\n                  <div style=\"margin-top:10px\" v-if=\"this.CityValue.id != undefined && this.PeopleValue.id != undefined && this.GroupValue.id != undefined && this.PoemValue.id != undefined\">\n                    <el-button type=\"primary\" style=\"margin-left:20px\" @click=\"addButtonP\"><i class=\"el-icon-plus\"></i>新增</el-button>\n                    <el-button type=\"primary\" @click=\"deleteButtonP\"><i class=\"el-icon-plus\"></i>批量删除</el-button>\n                  </div>\n                </div>\n              <!-- Group--xxx-------------------------------------------------------------------------------------- -->\n              <div v-if=\"this.CityValue.id != undefined && this.PeopleValue.id != undefined && this.GroupValue.id == undefined && this.PoemValue.id == undefined\">\n                <!-- 分页查询的表格 G -->\n                <el-table :data=\"GroupData\" \n                border\n                  @selection-change=\"handleSelectionChangeG\">\n                  <el-table-column type=\"selection\"> </el-table-column>\n                  <el-table-column prop=\"id\" label=\"id\" align=\"center\"> </el-table-column>\n                  <el-table-column prop=\"beginYear\" label=\"开始年份\" align=\"center\"> </el-table-column>\n                  <el-table-column prop=\"endYear\" label=\"结束年份\" align=\"center\" :show-overflow-tooltip=\"true\"> </el-table-column>\n                  <el-table-column align=\"center\"  label=\"操作\">\n                    <template slot-scope=\"scope\">\n                      <el-button\n                        size=\"mini\"\n                        @click=\"handleEditG(scope.$index, scope.row)\">编辑</el-button>\n                      <el-button\n                        size=\"mini\"\n                        type=\"danger\"\n                        @click=\"handleDeleteG(scope.$index, scope.row)\">删除</el-button>\n                    </template>\n                  </el-table-column>\n                </el-table>\n  \n                <!-- 分页查询的 G -->\n                <div class=\"block\" style=\"margin-top:15px\">\n                  <el-pagination\n                    @size-change=\"handleSizeChangeG\"\n                    @current-change=\"handleCurrentChangeG\"\n                    :current-page=\"currentPageG\"\n                    :page-size=\"100\"\n                    :page-sizes=\"[2, 5, 8, 100]\"   \n                    layout=\"total, sizes, prev, pager, next, jumper\"\n                    :total=\"countG\">\n                  </el-pagination>\n                </div>\n              </div>\n                <!--添加按钮的代码 G-->\n                <el-dialog title=\"添加诗人城市组\" :visible.sync=\"addVisibleG\" width=\"50%\" @close=\"resetG\">\n                  <el-form ref=\"formG\" :model=\"formG\" label-width=\"80px\">\n                        <el-form-item label=\"开始年份\">\n                            <el-input v-model=\"formG.beginYear\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"结束年份\">\n                            <el-input v-model=\"formG.endYear\"></el-input>\n                        </el-form-item>\n                        <el-form-item>\n                            <el-button type=\"primary\" @click=\"addGroup\">添加</el-button>\n                            <el-button @click=\"clearInputG\">重置</el-button>\n                        </el-form-item>\n                  </el-form>\n                </el-dialog>\n                <!--更新的按钮 G-->\n                <el-dialog title=\"更新诗人城市组\" :visible.sync=\"updateVisibleG\" width=\"50%\" @close=\"resetG\" >\n                  <el-form ref=\"formG\" :model=\"formG\" label-width=\"80px\">\n                        <el-form-item label=\"开始年份\">\n                            <el-input v-model=\"formG.beginYear\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"结束年份\">\n                          <el-input v-model=\"formG.endYear\"></el-input>\n                        </el-form-item>\n  \n                        <el-form-item>\n                            <el-button type=\"primary\" @click=\"updateGroup\">保存</el-button>\n                            <!-- <el-button @click=\"clearInput\">重置</el-button> -->\n                        </el-form-item>\n                  </el-form>\n                </el-dialog>\n                <!-- Experience---------------------------------------------------------------------------------------- -->\n                <div v-if=\"this.CityValue.id != undefined && this.PeopleValue.id != undefined && this.GroupValue.id != undefined && this.PoemValue.id == undefined\">\n                <!-- 分页查询的表格 G -->\n                <el-table :data=\"ExperienceData\" \n                border\n                  @selection-change=\"handleSelectionChangeE\">\n                  <el-table-column type=\"selection\"> </el-table-column>\n                  <el-table-column prop=\"id\" label=\"id\" align=\"center\"> </el-table-column>\n                  <el-table-column prop=\"beginYear\" label=\"开始年份\" align=\"center\"> </el-table-column>\n                  <el-table-column prop=\"endYear\" label=\"结束年份\" align=\"center\" :show-overflow-tooltip=\"true\"> </el-table-column>\n                  <el-table-column prop=\"document\" label=\"经历介绍\" align=\"center\"> </el-table-column>\n                  <el-table-column align=\"center\"  label=\"操作\">\n                    <template slot-scope=\"scope\">\n                      <el-button\n                        size=\"mini\"\n                        @click=\"handleEditE(scope.$index, scope.row)\">编辑</el-button>\n                      <el-button\n                        size=\"mini\"\n                        type=\"danger\"\n                        @click=\"handleDeleteE(scope.$index, scope.row)\">删除</el-button>\n                    </template>\n                  </el-table-column>\n                </el-table>\n  \n                <!-- 分页查询的 G -->\n                <div class=\"block\" style=\"margin-top:15px\">\n                  <el-pagination\n                    @size-change=\"handleSizeChangeE\"\n                    @current-change=\"handleCurrentChangeE\"\n                    :current-page=\"currentPageE\"\n                    :page-size=\"100\"\n                    :page-sizes=\"[2, 5, 8, 100]\"   \n                    layout=\"total, sizes, prev, pager, next, jumper\"\n                    :total=\"countE\">\n                  </el-pagination>\n                </div>\n              </div>\n                <!--添加按钮的代码 G-->\n                <el-dialog title=\"添加诗人经历\" :visible.sync=\"addVisibleE\" width=\"50%\" @close=\"resetE\">\n                  <el-form ref=\"formE\" :model=\"formE\" label-width=\"80px\">\n                        <el-form-item label=\"开始年份\">\n                            <el-input v-model=\"formE.beginYear\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"结束年份\">\n                            <el-input v-model=\"formE.endYear\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"经历\">\n                            <el-input v-model=\"formE.document\"></el-input>\n                        </el-form-item>\n                        <el-form-item>\n                            <el-button type=\"primary\" @click=\"addExperience\">添加</el-button>\n                            <el-button @click=\"clearInputE\">重置</el-button>\n                        </el-form-item>\n                  </el-form>\n                </el-dialog>\n                <!--更新的按钮 G-->\n                <el-dialog title=\"更新诗人经历\" :visible.sync=\"updateVisibleE\" width=\"50%\" @close=\"resetE\" >\n                  <el-form ref=\"formE\" :model=\"formE\" label-width=\"80px\">\n                        <el-form-item label=\"开始年份\">\n                            <el-input v-model=\"formE.beginYear\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"结束年份\">\n                          <el-input v-model=\"formE.endYear\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"经历\">\n                            <el-input v-model=\"formE.document\"></el-input>\n                        </el-form-item>\n                        <el-form-item>\n                            <el-button type=\"primary\" @click=\"updateExperience\">保存</el-button>\n                            <!-- <el-button @click=\"clearInput\">重置</el-button> -->\n                        </el-form-item>\n                  </el-form>\n                </el-dialog>\n                 <!-- Poem---------------------------------------------------------------------------------------- -->\n                 <div v-if=\"this.CityValue.id != undefined && this.PeopleValue.id != undefined && this.GroupValue.id != undefined && this.PoemValue.id != undefined\">\n                <!-- 分页查询的表格 P -->\n                <el-table :data=\"PoemData\" \n                border\n                  @selection-change=\"handleSelectionChangeP\">\n                  <el-table-column type=\"selection\"> </el-table-column>\n                  <el-table-column prop=\"id\" label=\"id\" align=\"center\"> </el-table-column>\n                  <el-table-column prop=\"poemTitle\" label=\"诗歌题目\" align=\"center\"> </el-table-column>\n                  <el-table-column prop=\"content\" label=\"诗歌内容\" align=\"center\" :show-overflow-tooltip=\"true\"> </el-table-column>\n                  <el-table-column prop=\"dynasty\" label=\"朝代\" align=\"center\"> </el-table-column>\n                  <el-table-column prop=\"year\" label=\"年份\" align=\"center\"> </el-table-column>\n                  <el-table-column prop=\"source\" label=\"来源\" align=\"center\"> </el-table-column>\n                  <el-table-column prop=\"type\" label=\"类型\" align=\"center\"> </el-table-column>\n                  <el-table-column align=\"center\"  label=\"操作\">\n                    <template slot-scope=\"scope\">\n                      <el-button\n                        size=\"mini\"\n                        @click=\"handleEditP(scope.$index, scope.row)\">编辑</el-button>\n                      <el-button\n                        size=\"mini\"\n                        type=\"danger\"\n                        @click=\"handleDeleteP(scope.$index, scope.row)\">删除</el-button>\n                    </template>\n                  </el-table-column>\n                </el-table>\n  \n                <!-- 分页查询的 G -->\n                <div class=\"block\" style=\"margin-top:15px\">\n                  <el-pagination\n                    @size-change=\"handleSizeChangeP\"\n                    @current-change=\"handleCurrentChangeP\"\n                    :current-page=\"currentPageP\"\n                    :page-size=\"100\"\n                    :page-sizes=\"[2, 5, 8, 100]\"   \n                    layout=\"total, sizes, prev, pager, next, jumper\"\n                    :total=\"countP\">\n                  </el-pagination>\n                </div>\n              </div>\n                <!--添加按钮的代码 P-->\n                <el-dialog title=\"添加诗歌\" :visible.sync=\"addVisibleP\" width=\"50%\" @close=\"resetE\">\n                  <el-form ref=\"formP\" :model=\"formP\" label-width=\"80px\">\n                        <el-form-item label=\"诗歌题目\">\n                            <el-input v-model=\"formP.poemTitle\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"诗歌内容\">\n                            <el-input v-model=\"formP.content\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"朝代\">\n                            <el-input v-model=\"formP.dynasty\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"年份\">\n                            <el-input v-model=\"formP.year\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"来源\">\n                            <el-input v-model=\"formP.source\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"类型\">\n                            <el-input v-model=\"formP.type\"></el-input>\n                        </el-form-item>\n                        <el-form-item>\n                            <el-button type=\"primary\" @click=\"addPoem\">添加</el-button>\n                            <el-button @click=\"clearInputP\">重置</el-button>\n                        </el-form-item>\n                  </el-form>\n                </el-dialog>\n                <!--更新的按钮 P-->\n                <el-dialog title=\"更新诗歌\" :visible.sync=\"updateVisibleP\" width=\"50%\" @close=\"resetE\" >\n                  <el-form ref=\"formP\" :model=\"formP\" label-width=\"80px\">\n                    <el-form-item label=\"诗歌题目\">\n                            <el-input v-model=\"formP.poemTitle\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"诗歌内容\">\n                            <el-input v-model=\"formP.content\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"朝代\">\n                            <el-input v-model=\"formP.dynasty\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"年份\">\n                            <el-input v-model=\"formP.year\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"来源\">\n                            <el-input v-model=\"formP.source\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"类型\">\n                            <el-input v-model=\"formP.type\"></el-input>\n                        </el-form-item>\n                        <el-form-item>\n                            <el-button type=\"primary\" @click=\"updatePoem\">保存</el-button>\n                            <!-- <el-button @click=\"clearInput\">重置</el-button> -->\n                        </el-form-item>\n                  </el-form>\n                </el-dialog>\n                    </el-main>\n                </el-container>\n  \n    </div>\n  </template>\n  \n  <script>\n  \n  export default {\n    name: \"CityManage\",\n    components:{\n    },\n    mounted:function(){\n      // 查询左侧的一个诗人栏\n      this.queryPeople()\n      this.queryCity()\n      //在页面打开后先将城市的信息放入选择框中\n      // this.$http.get(\"Province\")\n      //   .then(response=>{\n      //     this.CityDate = response.data\n\n      //     for(let i = 0; i < this.CityDate.length; i++){\n      //         var tmp = {}\n      //         tmp.value = (i+1).toString()\n      //         tmp.label = this.CityDate[i].province\n      //         this.options.push(tmp)\n              \n      //         //通过省份查询城市\n      //         this.$http.get(\"City\",{\n      //           params: {\n      //             province : this.CityDate[i].province\n      //           }\n      //         })\n      //         .then(response=>{\n      //           var children = []\n      //           for(let n = 0; n < response.data.length; n++){\n      //             var tmp = {}\n      //             tmp.value = (n+1).toString()\n      //             tmp.label = response.data[n].cname\n      //             children.push(tmp)\n      //           }\n      //           this.options[i].children = children\n      //           // console.log(children)\n      //         })\n      //     }   \n      //     //将获得的信息添加到option数组对象当中\n      //     console.log(this.options)  \n      //   })\n      //   .catch(function(error){\n      //     console.log(error)\n      // })\n    },\n    \n    data() {\n      return {\n        PeopleValue : \"\",//第一个选择器中诗人的值\n        CityValue : \"\",//第二个选择器中城市的值\n        GroupValue : \"\",//第三个选择器中组的值\n        ExperienceValue : \"\",//第四个选择器诗人经历的值\n\n        peopleName : [],//选择器中的诗人姓名\n        cityName :[],//选择器中的城市名称\n        groupName : [],//选择器中的诗人城市组名称\n\n        options: [{\n          value: 'zhinan',\n          label: '指南',\n          children: [{\n            value: 'shejiyuanze',\n            label: '设计原则',\n                    }]\n          }],\n \n        //--------------Group的设置\n        multipleSelectionG : [],\n        GroupData:[],//所有诗人城市组信息\n        currentPageG : 1,//当前的\n        countG : 0,//分页查询页面总数\n        pageNumG : 1,//\n        pageSizeG : 100,//默认的分页大小\n        addVisibleG : false,//添加的显示框\n        updateVisibleG : false,//更新的显示框\n        formG: {\n                  peopleId : Number,//诗人外键\n                  cityId : Number,//城市外键\n                  beginYear: '', // 开始年份\n                  endYear: '', // 结束年份\n              },\n        //--------------Experience的设置\n        multipleSelectionE : [],\n        ExperienceData:[],//所有诗人城市组信息\n        currentPageE : 1,//当前的\n        countE : 0,//分页查询页面总数\n        pageNumE : 1,//\n        pageSizeE : 100,//默认的分页大小\n        addVisibleE : false,//添加的显示框\n        updateVisibleE : false,//更新的显示框\n        formE: {\n                  groupId : Number,//诗人城市组外键\n                  beginYear : '', // 开始年份\n                  endYear : '', // 结束年份\n                  document : ''//诗人经历\n              },\n        //--------------Poem的设置\n        multipleSelectionP : [],\n        PoemData:[],//所有诗人城市组信息\n        currentPageP : 1,//当前的\n        countP : 0,//分页查询页面总数\n        pageNumP : 1,//\n        pageSizeP : 100,//默认的分页大小\n        addVisibleP : false,//添加的显示框\n        updateVisibleP : false,//更新的显示框\n        formP: {\n                  experienceId : \"\",//经验外键\n                  poemTitle : \"\",//诗歌题目\n                  content: \"\",// 诗歌内容\n                  dynasty : '', // 诗歌朝代\n                  year : '', // 结束年份\n                  source : '',//诗人经历\n                  type : '' //诗歌内形\n              },\n      }\n    },\n\n    methods:{\n      //选择器改变时 \n      displayDiv1(val){\n       \n        this.formG.peopleId = this.PeopleValue.id\n        if(this.PeopleValue.name != undefined && this.CityValue.cname != undefined && this.GroupValue.id == undefined){\n          this.queryGroup()\n        }\n     },\n      displayDiv2(val){\n        // console.log(this.CityValue.id)\n        this.formG.cityId = this.CityValue.id\n        if(this.PeopleValue.name != undefined && this.CityValue.cname != undefined && this.GroupValue.id == undefined ){\n          this.queryGroup()\n          \n        }\n        \n        // if(this.CityValue.length == 0){\n        //   return\n        // }\n\n        // const checkedNodes = this.$refs['cascaderAddr'].getCheckedNodes() // 获取当前点击的节点\n        // var cname = checkedNodes[0].data.label\n        // console.log(cname)\n      \n        // console.log(checkedNodes)\n        // console.log(checkedNodes[0].data.label) // 获取当前点击的节点的label\n       \n        // console.log(checkedNodes[0].pathLabels) // 获取由 label 组成的数组\n      },\n      displayDiv3(val){\n        this.formE.groupId = this.GroupValue.id\n        this.queryExperience()\n       \n      },\n      displayDiv4(val){\n        \n        this.querySceneryByPeopleName()\n      },\n\n      //查询诗人信息\n      queryPeople(){\n        this.$http.get(\"people\")\n        .then(response=>{\n          this.peopleName = response.data\n        })\n        .catch(function(error){\n          console.log(error)\n      })\n      },\n      queryCity(){\n        this.$http.get(\"City\")\n        .then(response=>{\n          this.cityName = response.data\n          // console.log(this.cityName)\n        })\n        .catch(function(error){\n          console.log(error)\n      })\n      },\n      queryGroup(){\n        this.$http.get(\"queryGroupByPeopleAndCityPage\",{params:{\n          pageNum : this.pageNumG,\n          pageSize : this.pageSizeG,\n          name : this.PeopleValue.name,\n          cname : this.CityValue.cname\n        }})\n        .then(response=>{\n          this.GroupData = response.data.data\n          this.countG = response.data.count\n          this.groupName = this.GroupData\n          console.log(this.groupName)\n        })\n        .catch(function(error){\n          console.log(error)\n      })\n\n      },\n      queryExperience(){\n        this.$http.get(\"queryExperienceByGroupIdPage\",{params:{\n          pageNum : this.pageNumE,\n          pageSize : this.pageSizeE,\n          groupId : this.GroupValue.id,\n          \n        }})\n        .then(response=>{\n          this.ExperienceData = response.data.data\n          this.countE = response.data.count\n          // this.groupName = this.GroupData\n          // console.log(this.groupName)\n        })\n        .catch(function(error){\n          console.log(error)\n      })\n      },\n      //监听操作按钮\n      handleEditG(index, row) {\n        this.updateVisibleG = true\n        this.formG = row\n        // console.log(index, row);\n      },\n      //删除操作\n      //删除按钮\n      handleDeleteG(index, row) {\n        // console.log(row.id);\n         this.$confirm('此操作将永久删除该条信息, 是否继续?', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(() => {\n            this.$http.delete(\"/Egroup/\" + row.id).then(res=>{\n              if(res){\n                this.$message({\n                  type: 'success',\n                  message: '删除成功!'\n                })\n                this.queryGroup()\n              }\n            })\n          }).catch(() => {\n            this.$message({\n              type: 'info',\n              message: '已取消删除'\n            });          \n          });\n      },\n      //批量删除\n      handleSelectionChangeG(val){\n        this.multipleSelectionG = val\n        // console.log(this.multipleSelectionG)\n      },\n      deleteMultipleGroup(){\n        let ids = this.multipleSelectionG.map(v => v.id)\n        this.$confirm('此操作将永久删除该条信息, 是否继续?', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(() => {\n            this.$http.post(\"/Egroup/batch\",ids).then(res=>{\n              if(res){\n                this.$message({\n                  type: 'success',\n                  message: '删除成功!'\n                })\n                this.queryGroup()\n              }\n            })\n          }).catch(() => {\n            this.$message({\n              type: 'info',\n              message: '已取消删除'\n            });          \n          });\n      },\n      //监听pageNum\n       handleCurrentChangeG(pageNum){\n        // console.log(pageNum);\n        this.pageNumG =pageNum\n        this.queryGroup()\n      },\n      //监听pageSize的\n      handleSizeChangeG(pageSize){\n        // console.log(pageSize);\n        this.pageSizeG = pageSize\n        this.queryGroup()\n      },\n      //添加窗体的操作\n      //清空\n      clearInputG(){\n              this.formG.beginYear = ''\n              this.formG.endYear = ''\n      },\n      //添加和更新城市的函数\n      saveGroup(){\n        this.$http.post(\"saveEgroup\",this.formG)\n              .then(res => {\n                  if(res){\n                    this.$message.success('保存成功');\n                    this.addVisibleG = false\n                    this.updateVisibleG = false\n                  }\n                  else{\n                    this.$message.error(\"保存失败\")\n                  }\n              })\n              .catch(function (error) {\n                  console.log(error);\n              })\n          this.queryGroup()\n      },\n      //添加城市信息\n      addGroup(){  \n        this.saveGroup()\n        this.queryGroup()\n        this.clearFormG()\n      },\n      //更新城市信息\n      updateGroup(){\n        \n        this.saveGroup()\n        this.queryGroup()\n        this.clearFormG()\n      },\n      //清空form中信息\n      clearFormG(){\n        this.formG.id = null,\n        this.formG.peopleId = this.PeopleValue.id,\n        this.formG.cityId = this.CityValue.id,\n        this.formG.beginYear = \"\",\n        this.formG.endYear = \"\"\n      },\n      // diolag点击叉叉后\n      resetG(){\n          this.clearFormG()\n          this.queryGroup()\n      },\n      // 新增的按钮\n      addButtonG(){\n        console.log(this.value)\n        if(this.PeopleValue.id == null || this.CityValue.id == null){\n          this.$message('请先选择诗人和城市');\n        }\n        else{\n          this.addVisibleG = true\n        }\n      },\n      //批量删除按钮\n      deleteButtonG(){\n          this.deleteMultipleGroup()\n      },\n\n      //Experience-----------------------------------------------------\n      //返回的是label\n      change(item){\n        if(item.endYear == null){\n          return item.beginYear\n        }\n        else{\n          return item.beginYear.toString() + ' - ' + item.endYear.toString()\n        }\n      },\n      //监听操作按钮\n      handleEditE(index, row) {\n        this.updateVisibleE = true\n        this.formE = row\n        // console.log(index, row);\n      },\n      //删除操作\n      //删除按钮\n      handleDeleteE(index, row) {\n        // console.log(row.id);\n         this.$confirm('此操作将永久删除该条信息, 是否继续?', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(() => {\n            this.$http.delete(\"/Experience/\" + row.id).then(res=>{\n              if(res){\n                this.$message({\n                  type: 'success',\n                  message: '删除成功!'\n                })\n                this.queryExperience()\n              }\n            })\n          }).catch(() => {\n            this.$message({\n              type: 'info',\n              message: '已取消删除'\n            });          \n          });\n      },\n      //批量删除\n      handleSelectionChangeE(val){\n        this.multipleSelectionE = val\n        // console.log(this.multipleSelectionG)\n      },\n      deleteMultipleGroup(){\n        let ids = this.multipleSelectionE.map(v => v.id)\n        this.$confirm('此操作将永久删除该条信息, 是否继续?', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(() => {\n            this.$http.post(\"/Experience/batch\",ids).then(res=>{\n              if(res){\n                this.$message({\n                  type: 'success',\n                  message: '删除成功!'\n                })\n                this.queryExperience()\n              }\n            })\n          }).catch(() => {\n            this.$message({\n              type: 'info',\n              message: '已取消删除'\n            });          \n          });\n      },\n      //监听pageNum\n       handleCurrentChangeE(pageNum){\n        // console.log(pageNum);\n        this.pageNumE = pageNum\n        this.queryExperience()\n      },\n      //监听pageSize的\n      handleSizeChangeE(pageSize){\n        // console.log(pageSize);\n        this.pageSizeE = pageSize\n        this.queryExperience()\n      },\n      //添加窗体的操作\n      //清空\n      clearInputE(){\n              this.formE.beginYear = ''\n              this.formE.endYear = ''\n              this.formE.document = ''\n      },\n      //添加和更新城市的函数\n      saveExperience(){\n        this.$http.post(\"saveExperience\",this.formE)\n              .then(res => {\n                  if(res){\n                    this.$message.success('保存成功');\n                    this.addVisibleE = false\n                    this.updateVisibleE = false\n                  }\n                  else{\n                    this.$message.error(\"保存失败\")\n                  }\n              })\n              .catch(function (error) {\n                  console.log(error);\n              })\n          this.queryExperience()\n      },\n      //添加城市信息\n      addExperience(){  \n        this.saveExperience()\n        this.queryExperience()\n        this.clearFormE()\n      },\n      //更新城市信息\n      updateExperience(){\n        this.saveExperience()\n        this.queryExperience()\n        this.clearFormE()\n      },\n      //清空form中信息\n      clearFormE(){\n        this.formE.id = null,\n        this.formE.groupId = this.GroupValue.id,\n        this.formE.beginYear = \"\",\n        this.formE.endYear = \"\",\n        this.formE.document = \"\"\n      },\n      // diolag点击叉叉后\n      resetE(){\n          this.clearFormE()\n          this.queryExperience()\n      },\n      // 新增的按钮\n      addButtonE(){\n        // console.log(\"GroupSelect\")\n        if(this.PeopleValue.id == null || this.CityValue.id == null){\n          this.$message('请先选择诗人和城市');\n        }\n        else{\n          this.addVisibleE = true\n        }\n      },\n      //批量删除按钮\n      deleteButtonE(){\n          this.deleteMultipleGroup()\n      },\n      //Poem -----------------------------------------------------\n    },\n\n    watched : {\n      \n    }\n  };\n  </script>\n  \n  <style scoped>\n  \n  .el-pagination{\n    text-align: center;\n  }\n  .el-autocomplete{\n    width: 120px;\n  }\n  </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}