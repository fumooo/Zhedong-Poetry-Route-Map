{"ast":null,"code":"export default {\n  mounted: function () {\n    this.queryCity();\n    this.$http.get(\"queryCity\").then(response => {\n      for (let i = 0; i < response.data.length; i++) {\n        response.data[i].value = response.data[i].cname;\n      }\n      this.autoCityNameSearch = response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  },\n  name: \"CityManage\",\n  data() {\n    return {\n      tableData: [],\n      currentPage: 1,\n      //当前的\n      count: 0,\n      //分页查询页面总数\n      pageNum: 1,\n      pageSize: 5,\n      CityNameSearch: \"\",\n      ProvinceNameSearch: \"\",\n      autoCityNameSearch: [],\n      autoProvinceSearch: []\n    };\n  },\n  methods: {\n    //将分页查询的axios分装在方法中\n    queryCity() {\n      this.$http.get(\"queryCityPage\", {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          cname: this.CityNameSearch,\n          province: this.ProvinceNameSearch\n        }\n      }).then(response => {\n        this.tableData = response.data.data;\n        this.count = response.data.count;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    refreshInput() {\n      this.CityNameSearch = \"\";\n      this.ProvinceNameSearch = \"\";\n    },\n    handleEdit(index, row) {\n      console.log(index, row);\n    },\n    handleDelete(index, row) {\n      console.log(index, row);\n    },\n    //监听pageNum\n    handleCurrentChange(pageNum) {\n      console.log(pageNum);\n      this.pageNum = pageNum;\n      this.queryCity();\n    },\n    //监听pageSize的\n    handleSizeChange(pageSize) {\n      console.log(pageSize);\n      this.pageSize = pageSize;\n      this.queryCity();\n    },\n    handleSelect(item) {\n      console.log(item.value);\n    },\n    querySearch(queryString, cb) {\n      var results = queryString ? this.autoCityNameSearch.filter(this.createFilter(queryString)) : this.autoCityNameSearch;\n      //cb是回调函数，返回筛选出的结果数据到输入框下面的输入列表\n      cb(results);\n    },\n    createFilter(queryString) {\n      return item => {\n        return item.value.toUpperCase().match(queryString.toUpperCase());\n      };\n    }\n  }\n};","map":{"version":3,"mappings":"AAoDA;EACAA;IACA;IACA,4BACAC;MACA;QACAC;MACA;MACA;IACA,GACAC;MACAC;IACA;EACA;EACAC;EACAC;IAEA;MACAC;MACAC;MAAA;MACAC;MAAA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACAC;MACA;QACAC;UACAR;UACAC;UACAQ;UACAC;QACA;MACA,GACAnB;QACA;QACA;MACA,GACAE;QACAC;MACA;IACA;IACAiB;MACA;MACA;IACA;IACAC;MACAlB;IACA;IACAmB;MACAnB;IACA;IACA;IACAoB;MACApB;MACA;MACA;IACA;IACA;IACAqB;MACArB;MACA;MACA;IACA;IAEAsB;MACAtB;IACA;IAEAuB;MACA;MACA;MACAC;IACA;IACAC;MACA;QACA;MACA;IACA;EACA;AACA","names":["mounted","then","response","catch","console","name","data","tableData","currentPage","count","pageNum","pageSize","CityNameSearch","ProvinceNameSearch","autoCityNameSearch","autoProvinceSearch","methods","queryCity","params","cname","province","refreshInput","handleEdit","handleDelete","handleCurrentChange","handleSizeChange","handleSelect","querySearch","cb","createFilter"],"sourceRoot":"src/view/back/RouterMain","sources":["CityManage.vue"],"sourcesContent":["<template>\n  <div>\n    <div style=\"margin-bottom:15px\">\n      <el-button type=\"primary\"><i class=\"el-icon-plus\"></i>新增</el-button>\n      <el-button type=\"primary\" style=\"margin-right:100px\" @click=\"refreshInput\"><i class=\"el-icon-refresh-right\"></i>重置</el-button>\n      城市搜索：<el-input style=\"width:120px\" v-model=\"CityNameSearch\" placeholder=\"请输入城市\"></el-input>\n      省份搜索：<el-input style=\"width:120px\" v-model=\"ProvinceNameSearch\" placeholder=\"请输入省份\"></el-input> \n      <el-autocomplete\n        class=\"inline-input\"\n        v-model=\"CityNameSearch\"\n        :fetch-suggestions=\"querySearch\"\n        placeholder=\"请输入内容\"\n        @select=\"handleSelect\"\n        :trigger-on-focus=\"false\"\n      ></el-autocomplete>\n    </div>\n    <!-- <el-button type=\"primary\" >主要按钮</el-button> -->\n    <el-table :data=\"tableData\">\n      <el-table-column type=\"selection\"> </el-table-column>\n      <!-- <el-table-column type=\"index\"  align=\"center\"></el-table-column> -->\n      <el-table-column prop=\"id\" label=\"id\" align=\"center\"> </el-table-column>\n      <el-table-column prop=\"cname\" label=\"城市名称\" align=\"center\"> </el-table-column>\n      <el-table-column prop=\"lng\" label=\"经度\" align=\"center\"> </el-table-column>\n      <el-table-column prop=\"lat\" label=\"纬度\" align=\"center\"> </el-table-column>\n      <el-table-column prop=\"province\" label=\"省份\" align=\"center\"> </el-table-column>\n      <el-table-column align=\"center\"  label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button\n            size=\"mini\"\n            @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"danger\"\n            @click=\"handleDelete(scope.$index, scope.row)\">删除</el-button>\n        </template>\n    </el-table-column>\n    </el-table>\n    <div class=\"block\" style=\"margin-top:15px\">\n      <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"currentPage\"\n        :page-size=\"5\"\n        :page-sizes=\"[2, 5, 8]\"   \n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"count\">\n      </el-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  mounted:function(){\n    this.queryCity()\n    this.$http.get(\"queryCity\")\n      .then(response=>{\n        for(let i = 0; i < response.data.length; i++){\n            response.data[i].value = response.data[i].cname\n        }\n        this.autoCityNameSearch = response.data\n      })\n      .catch(function(error){\n        console.log(error)\n      })\n  },\n  name: \"CityManage\",\n  data() {\n\n    return {\n      tableData : [],\n      currentPage : 1,//当前的\n      count : 0,//分页查询页面总数\n      pageNum : 1,\n      pageSize : 5,\n      CityNameSearch : \"\",\n      ProvinceNameSearch : \"\",\n      autoCityNameSearch : [],\n      autoProvinceSearch : [],\n    }\n  },\n  methods:{\n    //将分页查询的axios分装在方法中\n    queryCity(){\n      this.$http.get(\"queryCityPage\",{\n      params:{\n        pageNum : this.pageNum,\n        pageSize : this.pageSize,\n        cname : this.CityNameSearch,\n        province : this.ProvinceNameSearch,\n      }\n    })\n    .then(response=>{\n      this.tableData = response.data.data\n      this.count = response.data.count\n    })\n    .catch(function(error){\n      console.log(error)\n    })\n    },\n    refreshInput(){\n      this.CityNameSearch = \"\"\n      this.ProvinceNameSearch = \"\"\n    },\n    handleEdit(index, row) {\n      console.log(index, row);\n    },\n    handleDelete(index, row) {\n      console.log(index, row);\n    },\n    //监听pageNum\n     handleCurrentChange(pageNum){\n      console.log(pageNum);\n      this.pageNum =pageNum\n      this.queryCity()\n    },\n    //监听pageSize的\n    handleSizeChange(pageSize){\n      console.log(pageSize);\n      this.pageSize = pageSize\n      this.queryCity()\n    },\n\n    handleSelect(item) {\n        console.log(item.value);\n    },\n\n    querySearch(queryString,cb){\n       var results = queryString ? this.autoCityNameSearch.filter(this.createFilter(queryString)) : this.autoCityNameSearch;\n    //cb是回调函数，返回筛选出的结果数据到输入框下面的输入列表\n      cb(results);\n    },\n    createFilter(queryString) {\n      return (item) => {\n        return item.value.toUpperCase().match(queryString.toUpperCase());\n      };\n    }\n  }\n};\n</script>\n\n<style>\n.el-pagination{\n  text-align: center;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}