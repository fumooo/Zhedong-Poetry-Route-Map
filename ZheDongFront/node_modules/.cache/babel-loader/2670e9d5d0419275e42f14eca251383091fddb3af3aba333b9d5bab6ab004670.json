{"ast":null,"code":"import CityAdd from \"../City/CityAddForm.vue\";\nexport default {\n  name: \"CityManage\",\n  components: {\n    CityAdd\n  },\n  mounted: function () {\n    this.queryCity();\n    //查询cname搜索框\n    this.$http.get(\"queryCity\").then(response => {\n      for (let i = 0; i < response.data.length; i++) {\n        response.data[i].value = response.data[i].cname;\n        // this.autoCityNameSearch[i].value = response.data[i].cname\n      }\n\n      this.autoCityNameSearch = response.data;\n      // console.log(this.autoCityNameSearch)\n    }).catch(function (error) {\n      console.log(error);\n    });\n    //查询province搜索框\n    this.$http.get(\"queryProvince\").then(response => {\n      for (let i = 0; i < response.data.length; i++) {\n        response.data[i].value = response.data[i].province;\n      }\n      this.autoProvinceSearch = response.data;\n      // console.log(this.autoProvinceSearch)\n    }).catch(function (error) {\n      console.log(error);\n    });\n  },\n  data() {\n    return {\n      tableData: [],\n      currentPage: 1,\n      //当前的\n      count: 0,\n      //分页查询页面总数\n      pageNum: 1,\n      pageSize: 100,\n      CityNameSearch: \"\",\n      ProvinceNameSearch: \"\",\n      autoCityNameSearch: [],\n      autoProvinceSearch: [],\n      addVisible: false,\n      form: {\n        cname: '',\n        // 城市名\n        lng: '',\n        //经度\n        lat: '',\n        //纬度\n        province: '' //省份   \n      }\n    };\n  },\n\n  methods: {\n    //将分页查询的axios分装在方法中\n    queryCity() {\n      this.$http.get(\"queryCityPage\", {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          cname: this.CityNameSearch,\n          province: this.ProvinceNameSearch\n        }\n      }).then(response => {\n        this.tableData = response.data.data;\n        this.count = response.data.count;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    // 重置两个搜索框\n    refreshInput() {\n      this.CityNameSearch = \"\";\n      this.ProvinceNameSearch = \"\";\n      this.queryCity();\n    },\n    //监听操作按钮\n    handleEdit(index, row) {\n      console.log(index, row);\n    },\n    //删除操作\n    //删除按钮\n    handleDelete(index, row) {\n      console.log(index, row);\n      this.$confirm('此操作将永久删除该条信息, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$message({\n          type: 'success',\n          message: '删除成功!'\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    //监听pageNum\n    handleCurrentChange(pageNum) {\n      // console.log(pageNum);\n      this.pageNum = pageNum;\n      this.queryCity();\n    },\n    //监听pageSize的\n    handleSizeChange(pageSize) {\n      // console.log(pageSize);\n      this.pageSize = pageSize;\n      this.queryCity();\n    },\n    // 监听CityNameSearch\n    CitySearch() {\n      this.queryCity();\n    },\n    // 监听CityProvinceSearch\n    ProvinceSearch() {\n      this.queryCity();\n    },\n    //两个el-autocomplete的选择\n    handleSelect1(item) {\n      console.log(item.value);\n    },\n    querySearch1(queryString, cb) {\n      var results = queryString ? this.autoCityNameSearch.filter(this.createFilter(queryString)) : this.autoCityNameSearch;\n      cb(results);\n    },\n    handleSelect2(item) {\n      console.log(item.value);\n    },\n    querySearch2(queryString, cb) {\n      var results = queryString ? this.autoProvinceSearch.filter(this.createFilter(queryString)) : this.autoProvinceSearch;\n      cb(results);\n    },\n    createFilter(queryString) {\n      return item => {\n        return item.value.toUpperCase().match(queryString.toUpperCase());\n      };\n    },\n    //添加窗体的操作\n    //清空\n    clearInput() {\n      this.form.cname = '';\n      this.form.lng = '';\n      this.form.lat = '';\n      this.form.province = '';\n    },\n    //添加城市的函数\n    addCity(form) {\n      this.$http.post(\"saveCity\", form).then(res => {\n        if (res) {\n          this.$message.success('添加成功');\n          this.addVisible = false;\n        } else {\n          this.$message.error(\"添加失败\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.queryCity();\n    },\n    //提交按钮\n    onSubmit() {\n      this.addCity(this.form);\n      this.queryCity();\n    }\n  }\n};","map":{"version":3,"mappings":"AAqFA;AACA;EACAA;EACAC;IACAC;EACA;EACAC;IACA;IACA;IACA,4BACAC;MACA;QACAC;QACA;MACA;;MACA;MACA;IACA,GACAC;MACAC;IACA;IACA;IACA,gCACAH;MACA;QACAC;MACA;MACA;MACA;IACA,GACAC;MACAC;IACA;EACA;EAEAC;IACA;MACAC;MACAC;MAAA;MACAC;MAAA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QAAA;QACAC;QAAA;QACAC;QAAA;QACAC;MACA;IACA;EACA;;EACAC;IACA;IACAC;MACA;QACAC;UACAd;UACAC;UACAO;UACAG;QACA;MACA,GACAnB;QACA;QACA;MACA,GACAE;QACAC;MACA;IACA;IAEA;IACAoB;MACA;MACA;MACA;IACA;IAEA;IACAC;MACArB;IACA;IACA;IACA;IACAsB;MACAtB;MAEA;QACAuB;QACAC;QACAC;MACA;QAEA;UACAA;UACAC;QACA;MACA;QACA;UACAD;UACAC;QACA;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA;IACA;IAEA;IACAC;MACA;IACA;IAEA;IACAC;MACA/B;IACA;IACAgC;MACA;MACAC;IACA;IACAC;MACAlC;IACA;IACAmC;MACA;MACAF;IACA;IACAG;MACA;QACA;MACA;IACA;IAEA;IACA;IACAC;MACA;MACA;MACA;MACA;IACA;IACA;IACAC;MACA,kCACAzC;QACA;UACA;UACA;QACA,OACA;UACA;QACA;MACA,GACAE;QACAC;MACA;MACA;IACA;IACA;IACAuC;MACA;MACA;IACA;EAEA;AACA","names":["name","components","CityAdd","mounted","then","response","catch","console","data","tableData","currentPage","count","pageNum","pageSize","CityNameSearch","ProvinceNameSearch","autoCityNameSearch","autoProvinceSearch","addVisible","form","cname","lng","lat","province","methods","queryCity","params","refreshInput","handleEdit","handleDelete","confirmButtonText","cancelButtonText","type","message","handleCurrentChange","handleSizeChange","CitySearch","ProvinceSearch","handleSelect1","querySearch1","cb","handleSelect2","querySearch2","createFilter","clearInput","addCity","onSubmit"],"sourceRoot":"src/view/back/RouterMain/City","sources":["CityManage.vue"],"sourcesContent":["<template>\n  <div>\n    <div style=\"margin-bottom:15px\">\n      <el-button type=\"primary\" @click=\"addVisible = true\"><i class=\"el-icon-plus\"></i>新增</el-button>\n      <el-button type=\"primary\"><i class=\"el-icon-plus\"></i>批量删除</el-button>\n      <el-button type=\"primary\" style=\"margin-right:100px\" @click=\"refreshInput\"><i class=\"el-icon-refresh-right\"></i>重置</el-button>\n      \n      城市搜索： <el-autocomplete @change=\"CitySearch\"\n        class=\"inline-input\"\n        v-model=\"CityNameSearch\"\n        :fetch-suggestions=\"querySearch1\"\n        placeholder=\"请输入城市\"\n        @select=\"handleSelect1\"\n        :trigger-on-focus=\"false\"\n      ></el-autocomplete>\n      省份搜索：<el-autocomplete @change=\"ProvinceSearch\"\n        class=\"inline-input\"\n        v-model=\"ProvinceNameSearch\"\n        :fetch-suggestions=\"querySearch2\"\n        placeholder=\"请输入省份\"\n        @select=\"handleSelect2\"\n        :trigger-on-focus=\"false\"\n      ></el-autocomplete> \n    </div>\n    <!-- <el-button type=\"primary\" >主要按钮</el-button> -->\n    <!-- 分页查询的表格 -->\n    <el-table :data=\"tableData\">\n      <el-table-column type=\"selection\"> </el-table-column>\n      <!-- <el-table-column type=\"index\"  align=\"center\"></el-table-column> -->\n      <el-table-column prop=\"id\" label=\"id\" align=\"center\"> </el-table-column>\n      <el-table-column prop=\"cname\" label=\"城市名称\" align=\"center\"> </el-table-column>\n      <el-table-column prop=\"lng\" label=\"经度\" align=\"center\"> </el-table-column>\n      <el-table-column prop=\"lat\" label=\"纬度\" align=\"center\"> </el-table-column>\n      <el-table-column prop=\"province\" label=\"省份\" align=\"center\"> </el-table-column>\n      <el-table-column align=\"center\"  label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button\n            size=\"mini\"\n            @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"danger\"\n            @click=\"handleDelete(scope.$index, scope.row)\">删除</el-button>\n        </template>\n    </el-table-column>\n    </el-table>\n    <!-- 分页查询的 -->\n    <div class=\"block\" style=\"margin-top:15px\">\n      <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"currentPage\"\n        :page-size=\"100\"\n        :page-sizes=\"[2, 5, 8, 100]\"   \n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"count\">\n      </el-pagination>\n    </div>\n\n    <!--添加按钮的代码-->\n    <el-dialog title=\"添加城市信息\" :visible.sync=\"addVisible\" width=\"30%\">\n       <el-form ref=\"form\" :model=\"form\" label-width=\"80px\">\n            <el-form-item label=\"城市名称\">\n                <el-input v-model=\"form.cname\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"城市经度\">\n                <el-input v-model=\"form.lng\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"城市维度\">\n                <el-input v-model=\"form.lat\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"省份\">\n                <el-input v-model=\"form.province\"></el-input>\n            </el-form-item>\n            <el-form-item>\n                <el-button type=\"primary\" @click=\"onSubmit\">添加</el-button>\n                <el-button @click=\"clearInput\">重置</el-button>\n            </el-form-item>\n       </el-form>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nimport CityAdd from \"../City/CityAddForm.vue\"\nexport default {\n  name: \"CityManage\",\n  components:{\n    CityAdd\n  },\n  mounted:function(){\n    this.queryCity()\n    //查询cname搜索框\n    this.$http.get(\"queryCity\")\n      .then(response=>{\n        for(let i = 0; i < response.data.length; i++){\n          response.data[i].value = response.data[i].cname\n          // this.autoCityNameSearch[i].value = response.data[i].cname\n        }\n        this.autoCityNameSearch = response.data\n        // console.log(this.autoCityNameSearch)\n      })\n      .catch(function(error){\n        console.log(error)\n      })\n      //查询province搜索框\n    this.$http.get(\"queryProvince\")\n      .then(response=>{\n        for(let i = 0; i < response.data.length; i++){\n          response.data[i].value = response.data[i].province\n        }\n      this.autoProvinceSearch = response.data\n      // console.log(this.autoProvinceSearch)\n    })\n    .catch(function(error){\n      console.log(error)\n    })\n  },\n  \n  data() {\n    return {\n      tableData : [],\n      currentPage : 1,//当前的\n      count : 0,//分页查询页面总数\n      pageNum : 1,\n      pageSize : 100,\n      CityNameSearch : \"\",\n      ProvinceNameSearch : \"\",\n      autoCityNameSearch : [],\n      autoProvinceSearch : [],\n      addVisible : false,\n      form: {\n                cname: '', // 城市名\n                lng: '', //经度\n                lat: '', //纬度\n                province: '',//省份   \n            }\n    }\n  },\n  methods:{\n    //将分页查询的axios分装在方法中\n    queryCity(){\n      this.$http.get(\"queryCityPage\",{\n      params:{\n        pageNum : this.pageNum,\n        pageSize : this.pageSize,\n        cname : this.CityNameSearch,\n        province : this.ProvinceNameSearch,\n      }\n    })\n    .then(response=>{\n      this.tableData = response.data.data\n      this.count = response.data.count\n    })\n    .catch(function(error){\n      console.log(error)\n    })\n    },\n\n    // 重置两个搜索框\n    refreshInput(){\n      this.CityNameSearch = \"\"\n      this.ProvinceNameSearch = \"\"\n      this.queryCity()\n    },\n\n    //监听操作按钮\n    handleEdit(index, row) {\n      console.log(index, row);\n    },\n    //删除操作\n    //删除按钮\n    handleDelete(index, row) {\n      console.log(index, row);\n\n       this.$confirm('此操作将永久删除该条信息, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          });\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          });          \n        });\n    },\n\n    //监听pageNum\n     handleCurrentChange(pageNum){\n      // console.log(pageNum);\n      this.pageNum =pageNum\n      this.queryCity()\n    },\n\n    //监听pageSize的\n    handleSizeChange(pageSize){\n      // console.log(pageSize);\n      this.pageSize = pageSize\n      this.queryCity()\n    },\n\n    // 监听CityNameSearch\n    CitySearch(){\n      this.queryCity()\n    },\n\n    // 监听CityProvinceSearch\n    ProvinceSearch(){\n      this.queryCity()\n    },\n\n    //两个el-autocomplete的选择\n    handleSelect1(item) {\n        console.log(item.value);\n    },\n    querySearch1(queryString,cb){\n       var results = queryString ? this.autoCityNameSearch.filter(this.createFilter(queryString)) : this.autoCityNameSearch;\n       cb(results);\n    },\n    handleSelect2(item) {\n        console.log(item.value);\n    },\n    querySearch2(queryString,cb){\n       var results = queryString ? this.autoProvinceSearch.filter(this.createFilter(queryString)) : this.autoProvinceSearch;\n       cb(results);\n    },\n    createFilter(queryString) {\n      return (item) => {\n        return item.value.toUpperCase().match(queryString.toUpperCase());\n      };\n    },\n\n    //添加窗体的操作\n    //清空\n    clearInput(){\n            this.form.cname = ''\n            this.form.lng = ''\n            this.form.lat = ''\n            this.form.province = ''\n        },\n    //添加城市的函数\n    addCity(form){\n      this.$http.post(\"saveCity\",form)\n            .then(res => {\n                if(res){\n                  this.$message.success('添加成功');\n                  this.addVisible = false                 \n                }\n                else{\n                  this.$message.error(\"添加失败\")\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n        this.queryCity()\n    },\n    //提交按钮\n    onSubmit(){\n            this.addCity(this.form)\n            this.queryCity()\n    },\n    \n  }\n};\n</script>\n\n<style>\n.el-pagination{\n  text-align: center;\n}\n.el-autocomplete{\n  width: 120px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}