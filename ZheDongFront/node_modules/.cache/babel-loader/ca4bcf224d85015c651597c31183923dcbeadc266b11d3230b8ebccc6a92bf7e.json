{"ast":null,"code":"//在src下创建一个store文件夹，其中去创建index.js来创建Vuex中最为核心的store\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport axios from 'axios';\nVue.use(Vuex);\n// Vue.prototype.$http = axios\naxios.defaults.baseURL = \"http://localhost:8088\";\n\n//准备state--用于存储数据\nconst state = {\n  checkListDate: [],\n  //选中的多选框数据\n  poemList: [],\n  //此数组 用于存储用户点击诗人的多选框诗人id\n  peopleName: [],\n  //多选框选中的诗人名字存放在数组之中\n\n  account: \"\",\n  //用于验证账号\n  password: \"\" //用于验证密码\n};\n\n//准备mutations -- 仅仅用于操作数据（state） state指是state数据域，response指的是传过来的数据\nconst mutations = {\n  //重制刷新页面\n  REFRESH(state, response) {\n    state.checkListDate = response;\n    console.log(response);\n  },\n  //更新左边的菜单栏\n  updateLeftNav(state, response) {\n    state.checkListDate = response;\n  },\n  //更新诗人列表\n  updatePeopleName(state, response) {\n    state.peopleName = response;\n  },\n  updateLoginForm(state, response) {\n    state.account = response.account;\n    state.password = response.password;\n  }\n};\n\n//准备actions--用于响应组件中动作  commit指的是通过action去commit到mutations的这个动作 data指的是从组件中dispatch过来的值\nconst actions = {\n  refresh({\n    commit\n  }) {\n    axios.get(\"people\").then(response => {\n      commit('REFRESH', response.data);\n    }).catch(function (error) {\n      // 处理错误情况\n      console.log(error);\n    });\n  },\n  updateLeftNav({\n    commit\n  }, data) {\n    axios.get(\"people/mohu\", {\n      params: {\n        name: data\n      }\n    }).then(response => {\n      commit('updateLeftNav', response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  },\n  updatePeopleName({\n    commit\n  }, data) {\n    commit('updatePeopleName', data);\n  },\n  updateLoginForm({\n    commit\n  }, data) {\n    commit('updateLoginForm', data);\n  }\n};\n\n//创建并暴露store\nexport default new Vuex.Store({\n  actions,\n  mutations,\n  state\n});","map":{"version":3,"names":["Vue","Vuex","axios","use","defaults","baseURL","state","checkListDate","poemList","peopleName","account","password","mutations","REFRESH","response","console","log","updateLeftNav","updatePeopleName","updateLoginForm","actions","refresh","commit","get","then","data","catch","error","params","name","Store"],"sources":["/Users/fuxiaolong/Project/浙东唐诗之路项目/ZheDongFront/src/store/index.js"],"sourcesContent":["//在src下创建一个store文件夹，其中去创建index.js来创建Vuex中最为核心的store\nimport Vue from \"vue\"\nimport Vuex from \"vuex\"\nimport axios from 'axios';\n\nVue.use(Vuex)\n// Vue.prototype.$http = axios\naxios.defaults.baseURL = \"http://localhost:8088\"\n\n//准备state--用于存储数据\nconst state = {\n    checkListDate:[],//选中的多选框数据\n    poemList:[],//此数组 用于存储用户点击诗人的多选框诗人id\n    peopleName:[],//多选框选中的诗人名字存放在数组之中\n\n    account:\"\",//用于验证账号\n    password:\"\",//用于验证密码\n}\n\n//准备mutations -- 仅仅用于操作数据（state） state指是state数据域，response指的是传过来的数据\nconst mutations = {\n    //重制刷新页面\n    REFRESH(state,response){\n        state.checkListDate = response \n        console.log(response)\n    },\n\n    //更新左边的菜单栏\n    updateLeftNav(state,response){\n        state.checkListDate = response\n    },\n\n    //更新诗人列表\n    updatePeopleName(state,response){\n        state.peopleName = response\n    },\n\n    updateLoginForm(state,response){\n        state.account = response.account\n        state.password = response.password\n        \n    }\n}\n\n//准备actions--用于响应组件中动作  commit指的是通过action去commit到mutations的这个动作 data指的是从组件中dispatch过来的值\nconst actions = {\n\n    refresh({commit}){\n        axios.get(\"people\").then((response)=>{\n        commit('REFRESH',response.data)       \n    }).catch(function (error) {\n        // 处理错误情况\n        console.log(error);\n      })\n    },\n\n    updateLeftNav({commit},data){\n        axios.get(\"people/mohu\",{\n            params: {\n            name: data\n           }\n         })\n         .then((response)=>{\n            commit('updateLeftNav',response.data)\n         }) \n         .catch(function (error) {\n           console.log(error);\n         }) \n    },\n\n    updatePeopleName({commit},data){\n        commit('updatePeopleName',data)\n    },\n\n    updateLoginForm({commit},data){\n        commit('updateLoginForm',data)\n    }\n    \n}\n\n//创建并暴露store\nexport default new Vuex.Store({\n    actions,\n    mutations,\n    state,\n})"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AAEzBF,GAAG,CAACG,GAAG,CAACF,IAAI,CAAC;AACb;AACAC,KAAK,CAACE,QAAQ,CAACC,OAAO,GAAG,uBAAuB;;AAEhD;AACA,MAAMC,KAAK,GAAG;EACVC,aAAa,EAAC,EAAE;EAAC;EACjBC,QAAQ,EAAC,EAAE;EAAC;EACZC,UAAU,EAAC,EAAE;EAAC;;EAEdC,OAAO,EAAC,EAAE;EAAC;EACXC,QAAQ,EAAC,EAAE,CAAC;AAChB,CAAC;;AAED;AACA,MAAMC,SAAS,GAAG;EACd;EACAC,OAAO,CAACP,KAAK,EAACQ,QAAQ,EAAC;IACnBR,KAAK,CAACC,aAAa,GAAGO,QAAQ;IAC9BC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACzB,CAAC;EAED;EACAG,aAAa,CAACX,KAAK,EAACQ,QAAQ,EAAC;IACzBR,KAAK,CAACC,aAAa,GAAGO,QAAQ;EAClC,CAAC;EAED;EACAI,gBAAgB,CAACZ,KAAK,EAACQ,QAAQ,EAAC;IAC5BR,KAAK,CAACG,UAAU,GAAGK,QAAQ;EAC/B,CAAC;EAEDK,eAAe,CAACb,KAAK,EAACQ,QAAQ,EAAC;IAC3BR,KAAK,CAACI,OAAO,GAAGI,QAAQ,CAACJ,OAAO;IAChCJ,KAAK,CAACK,QAAQ,GAAGG,QAAQ,CAACH,QAAQ;EAEtC;AACJ,CAAC;;AAED;AACA,MAAMS,OAAO,GAAG;EAEZC,OAAO,CAAC;IAACC;EAAM,CAAC,EAAC;IACbpB,KAAK,CAACqB,GAAG,CAAC,QAAQ,CAAC,CAACC,IAAI,CAAEV,QAAQ,IAAG;MACrCQ,MAAM,CAAC,SAAS,EAACR,QAAQ,CAACW,IAAI,CAAC;IACnC,CAAC,CAAC,CAACC,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtB;MACAZ,OAAO,CAACC,GAAG,CAACW,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ,CAAC;EAEDV,aAAa,CAAC;IAACK;EAAM,CAAC,EAACG,IAAI,EAAC;IACxBvB,KAAK,CAACqB,GAAG,CAAC,aAAa,EAAC;MACpBK,MAAM,EAAE;QACRC,IAAI,EAAEJ;MACP;IACF,CAAC,CAAC,CACDD,IAAI,CAAEV,QAAQ,IAAG;MACfQ,MAAM,CAAC,eAAe,EAACR,QAAQ,CAACW,IAAI,CAAC;IACxC,CAAC,CAAC,CACDC,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBZ,OAAO,CAACC,GAAG,CAACW,KAAK,CAAC;IACpB,CAAC,CAAC;EACP,CAAC;EAEDT,gBAAgB,CAAC;IAACI;EAAM,CAAC,EAACG,IAAI,EAAC;IAC3BH,MAAM,CAAC,kBAAkB,EAACG,IAAI,CAAC;EACnC,CAAC;EAEDN,eAAe,CAAC;IAACG;EAAM,CAAC,EAACG,IAAI,EAAC;IAC1BH,MAAM,CAAC,iBAAiB,EAACG,IAAI,CAAC;EAClC;AAEJ,CAAC;;AAED;AACA,eAAe,IAAIxB,IAAI,CAAC6B,KAAK,CAAC;EAC1BV,OAAO;EACPR,SAAS;EACTN;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}