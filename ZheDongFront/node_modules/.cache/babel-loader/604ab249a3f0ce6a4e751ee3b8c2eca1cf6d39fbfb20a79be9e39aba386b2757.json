{"ast":null,"code":"export default {\n  name: \"CityManage\",\n  components: {},\n  mounted: function () {\n    // 查询左侧的一个诗人栏\n    this.queryPeople();\n    this.queryCity();\n    //在页面打开后先将城市的信息放入选择框中\n    // this.$http.get(\"Province\")\n    //   .then(response=>{\n    //     this.CityDate = response.data\n\n    //     for(let i = 0; i < this.CityDate.length; i++){\n    //         var tmp = {}\n    //         tmp.value = (i+1).toString()\n    //         tmp.label = this.CityDate[i].province\n    //         this.options.push(tmp)\n\n    //         //通过省份查询城市\n    //         this.$http.get(\"City\",{\n    //           params: {\n    //             province : this.CityDate[i].province\n    //           }\n    //         })\n    //         .then(response=>{\n    //           var children = []\n    //           for(let n = 0; n < response.data.length; n++){\n    //             var tmp = {}\n    //             tmp.value = (n+1).toString()\n    //             tmp.label = response.data[n].cname\n    //             children.push(tmp)\n    //           }\n    //           this.options[i].children = children\n    //           // console.log(children)\n    //         })\n    //     }   \n    //     //将获得的信息添加到option数组对象当中\n    //     console.log(this.options)  \n    //   })\n    //   .catch(function(error){\n    //     console.log(error)\n    // })\n  },\n\n  data() {\n    return {\n      PeopleValue: \"\",\n      //第一个选择器中诗人的值\n      CityValue: \"\",\n      //第二个选择器中城市的值\n      GroupValue: \"\",\n      //第三个选择器中组的值\n      ExperienceValue: \"\",\n      //第四个选择器诗人经历的值\n\n      peopleName: [],\n      //选择器中的诗人姓名\n      cityName: [],\n      //选择器中的城市名称\n\n      options: [{\n        value: 'zhinan',\n        label: '指南',\n        children: [{\n          value: 'shejiyuanze',\n          label: '设计原则'\n        }]\n      }],\n      //------Group的设置\n      GroupData: [],\n      //所有诗人城市组信息\n      currentPageG: 1,\n      //当前的\n      countG: 0,\n      //分页查询页面总数\n      pageNumG: 1,\n      //\n      pageSizeG: 100,\n      //默认的分页大小\n      addVisibleG: false,\n      //添加的显示框\n      updateVisibleG: false,\n      //更新的显示框\n      formG: {\n        peopleId: Number,\n        //诗人外键\n        cityId: Number,\n        //城市外键\n        beginYear: '',\n        // 开始年份\n        endYear: '' // 结束年份\n      }\n    };\n  },\n\n  methods: {\n    //选择器改变时 \n    displayDiv1(val) {\n      console.log(this.PeopleValue.name);\n      if (this.PeopleValue.name != undefined && this.CityValue.cname != undefined) {\n        this.queryGroup();\n      }\n      // this.form.peopleId = this.value.id\n      // console.log(this.form)\n      // this.querySceneryByPeopleName()\n    },\n\n    displayDiv2(val) {\n      console.log(this.CityValue.cname);\n      // console.log(this.CityValue.id)\n      if (this.PeopleValue.name != undefined && this.CityValue.cname != undefined) {\n        this.queryGroup();\n      }\n      // if(this.CityValue.length == 0){\n      //   return\n      // }\n\n      // const checkedNodes = this.$refs['cascaderAddr'].getCheckedNodes() // 获取当前点击的节点\n      // var cname = checkedNodes[0].data.label\n      // console.log(cname)\n\n      // console.log(checkedNodes)\n      // console.log(checkedNodes[0].data.label) // 获取当前点击的节点的label\n\n      // console.log(checkedNodes[0].pathLabels) // 获取由 label 组成的数组\n    },\n\n    displayDiv3(val) {\n      // this.formG.peopleId = this.value.id\n      // console.log(this.form)\n      this.querySceneryByPeopleName();\n    },\n    displayDiv4(val) {\n      // this.form.peopleId = this.value.id\n      // console.log(this.form)\n      this.querySceneryByPeopleName();\n    },\n    //查询诗人信息\n    queryPeople() {\n      this.$http.get(\"people\").then(response => {\n        this.peopleName = response.data;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    queryCity() {\n      this.$http.get(\"City\").then(response => {\n        this.cityName = response.data;\n        // console.log(this.cityName)\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    queryGroup() {\n      this.$http.get(\"queryGroupByPeopleAndCityPage\", {\n        params: {\n          pageNum: this.pageNumG,\n          pageSize: this.pageSizeG,\n          name: this.PeopleValue.name,\n          cname: this.CityValue.cname\n        }\n      }).then(response => {\n        this.GroupData = response.data.data;\n        this.countG = response.data.count;\n        // console.log(this.GroupData)\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    //监听操作按钮\n    handleEditG(index, row) {\n      this.updateVisible = true;\n      this.formG = row;\n      // console.log(index, row);\n    },\n\n    //删除操作\n    //删除按钮\n    handleDeleteG(index, row) {\n      // console.log(row.id);\n      this.$confirm('此操作将永久删除该条信息, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$http.delete(\"/Scenery/\" + row.id).then(res => {\n          if (res) {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n            this.querySceneryByPeopleName();\n          }\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    //批量删除\n    handleSelectionChangeG(val) {\n      this.multipleSelection = val;\n    },\n    deleteMultipleCityG() {\n      let ids = this.multipleSelection.map(v => v.id);\n      this.$confirm('此操作将永久删除该条信息, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$http.post(\"/Scenery/batch\", ids).then(res => {\n          if (res) {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n            this.querySceneryByPeopleName();\n          }\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    //监听pageNum\n    handleCurrentChangeG(pageNum) {\n      // console.log(pageNum);\n      this.pageNumG = pageNum;\n      this.queryGroup();\n    },\n    //监听pageSize的\n    handleSizeChangeG(pageSize) {\n      // console.log(pageSize);\n      this.pageSizG = pageSize;\n      this.queryGroup();\n    },\n    //添加窗体的操作\n    //清空\n    clearInput() {\n      this.formG.name = '';\n      this.formG.introduction = '';\n    },\n    //添加和更新城市的函数\n    saveScenery() {\n      // this.form.peopleId = \n      this.$http.post(\"saveScenery\", this.formG).then(res => {\n        if (res) {\n          this.$message.success('保存成功');\n          this.addVisible = false;\n          this.updateVisible = false;\n        } else {\n          this.$message.error(\"保存失败\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.querySceneryByPeopleName();\n    },\n    //添加城市信息\n    addScenery() {\n      this.saveScenery();\n      this.querySceneryByPeopleName();\n      this.clearFormG();\n    },\n    //更新城市信息\n    updateScenery() {\n      this.saveScenery();\n      this.querySceneryByPeopleName();\n      this.clearFormG();\n    },\n    //清空form中信息\n    clearFormG() {\n      this.formG.id = null, this.formG.peopleId = Number, this.formG.cityId = Number, this.formG.endYear = \"\", this.formG.endYear = \"\";\n    },\n    // diolag点击叉叉后\n    resetG() {\n      this.clearFormG();\n      this.queryGroup();\n    },\n    // 新增的按钮\n    addButtonG() {\n      console.log(this.value);\n      if (this.PeopleValue.id == null || this.CityValue.id == null) {\n        this.$message('请先选择诗人和城市');\n      } else {\n        this.addVisibleG = true;\n      }\n    },\n    //批量删除按钮\n    deleteButtonG() {\n      if (this.value.id == null) {\n        this.$message('请先选择诗人');\n      } else {\n        this.deleteMultipleCity();\n      }\n    }\n\n    //----------------------\n  },\n\n  watched: {}\n};","map":{"version":3,"mappings":"AAyIA;EACAA;EACAC,aACA;EACAC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;;EAEAC;IACA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;;MAEAC;MAAA;MACAC;MAAA;;MAIAC;QACAC;QACAC;QACAC;UACAF;UACAC;QACA;MACA;MAEA;MACAE;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;QACAC;QAAA;QACAC;QAAA;QACAC;QAAA;QACAC;MACA;IACA;EACA;;EAEAC;IACA;IACAC;MACAC;MAEA;QACA;MACA;MACA;MACA;MACA;IACA;;IACAC;MACAD;MACA;MACA;QACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;;MAEA;MACA;;MAEA;IACA;;IACAE;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA,yBACAC;QACA;MACA,GACAC;QACAN;MACA;IACA;IACAO;MACA,uBACAF;QACA;QACA;MACA,GACAC;QACAN;MACA;IACA;IACAQ;MACA;QAAAC;UACAC;UACAC;UACAvC;UACAwC;QACA;MAAA,GACAP;QACA;QACA;QACA;MACA,GACAC;QACAN;MACA;IAEA;IAEA;IACAa;MACA;MACA;MACA;IACA;;IACA;IACA;IACAC;MACA;MACA;QACAC;QACAC;QACAC;MACA;QACA;UACA;YACA;cACAA;cACAC;YACA;YACA;UACA;QACA;MACA;QACA;UACAD;UACAC;QACA;MACA;IACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;QACAL;QACAC;QACAC;MACA;QACA;UACA;YACA;cACAA;cACAC;YACA;YACA;UACA;QACA;MACA;QACA;UACAD;UACAC;QACA;MACA;IACA;IACA;IACAG;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA;IACA;IAGA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA;MACA,2CACAnB;QACA;UACA;UACA;UACA;QACA,OACA;UACA;QACA;MACA,GACAC;QACAN;MACA;MACA;IACA;IACA;IACAyB;MACA;MACA;MACA;IACA;IAGA;IACAC;MAEA;MACA;MACA;IACA;IACA;IACAC;MACA,sBACA,8BACA,4BACA,yBACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA7B;MACA;QACA;MACA,OACA;QACA;MACA;IACA;IACA;IACA8B;MACA;QACA;MACA,OACA;QACA;MACA;IACA;;IAEA;EAGA;;EACAC,UAEA;AACA","names":["name","components","mounted","data","PeopleValue","CityValue","GroupValue","ExperienceValue","peopleName","cityName","options","value","label","children","GroupData","currentPageG","countG","pageNumG","pageSizeG","addVisibleG","updateVisibleG","formG","peopleId","cityId","beginYear","endYear","methods","displayDiv1","console","displayDiv2","displayDiv3","displayDiv4","queryPeople","then","catch","queryCity","queryGroup","params","pageNum","pageSize","cname","handleEditG","handleDeleteG","confirmButtonText","cancelButtonText","type","message","handleSelectionChangeG","deleteMultipleCityG","handleCurrentChangeG","handleSizeChangeG","clearInput","saveScenery","addScenery","updateScenery","clearFormG","resetG","addButtonG","deleteButtonG","watched"],"sourceRoot":"src/view/back/RouterMain/PeoplePoem","sources":["PeoplePoemManage.vue"],"sourcesContent":["<template>\n    <div>\n      <el-container>\n          <!-- 主页面查询 -->\n          <el-main>\n               <div style=\"margin-bottom:15px\">\n                <!-- 选择器 选择诗人 -->\n                请选择诗人\n                <el-select v-model=\"PeopleValue\" value-key=\"name\" filterable placeholder=\"请选择\" @change=\"displayDiv1\" clearable>\n                  <el-option\n                    v-for=\"item in peopleName\"\n                    :key=\"item.id\"\n                    :label=\"item.name\"\n                    :value=\"item\"\n                    >\n                  </el-option>\n                </el-select>\n\n                请选择城市\n                <!-- <el-cascader ref=\"cascaderAddr\" v-model=\"CityValue\" :options=\"options\" :show-all-levels=\"false\" clearable @change=\"displayDiv2\" ></el-cascader> -->\n                <el-select v-model=\"CityValue\" value-key=\"cname\" filterable placeholder=\"请选择\" @change=\"displayDiv2\" clearable>\n                  <el-option\n                    v-for=\"item in cityName\"\n                    :key=\"item.id\"\n                    :label=\"item.cname\"\n                    :value=\"item\"\n                    >\n                  </el-option>\n                </el-select>\n                <br>\n\n                请选择组选\n                <el-select v-model=\"GroupValue\" value-key=\"name\" filterable placeholder=\"请选择\" @change=\"displayDiv3\">\n                  <el-option\n                    v-for=\"item in peopleName\"\n                    :key=\"item.id\"\n                    :label=\"item.name\"\n                    :value=\"item\"\n                    >\n                  </el-option>\n                </el-select>\n                请选择经历\n                <el-select v-model=\"ExperienceValue\" value-key=\"name\" filterable placeholder=\"请选择\" @change=\"displayDiv4\">\n                  <el-option\n                    v-for=\"item in peopleName\"\n                    :key=\"item.id\"\n                    :label=\"item.name\"\n                    :value=\"item\"\n                    >\n                  </el-option>\n                </el-select>\n\n                  <el-button type=\"primary\" style=\"margin-left:20px\" @click=\"addButtonG\"><i class=\"el-icon-plus\"></i>新增</el-button>\n                  <el-button type=\"primary\" @click=\"deleteButtonG\"><i class=\"el-icon-plus\"></i>批量删除</el-button>\n                  <el-button type=\"primary\" @click=\"deleteButtonG\"><i class=\"el-icon-plus\"></i>批量添加</el-button>\n                </div>\n\n                <div>\n                <!-- 分页查询的表格 G -->\n                <el-table :data=\"GroupData\" \n                border\n                  @selection-change=\"handleSelectionChangeG\">\n                  <el-table-column type=\"selection\"> </el-table-column>\n                  <el-table-column prop=\"id\" label=\"id\" align=\"center\"> </el-table-column>\n                  <el-table-column prop=\"beginYear\" label=\"开始年份\" align=\"center\"> </el-table-column>\n                  <el-table-column prop=\"endYear\" label=\"结束年份\" align=\"center\" :show-overflow-tooltip=\"true\"> </el-table-column>\n                  <el-table-column align=\"center\"  label=\"操作\">\n                    <template slot-scope=\"scope\">\n                      <el-button\n                        size=\"mini\"\n                        @click=\"handleEditG(scope.$index, scope.row)\">编辑</el-button>\n                      <el-button\n                        size=\"mini\"\n                        type=\"danger\"\n                        @click=\"handleDeleteG(scope.$index, scope.row)\">删除</el-button>\n                    </template>\n                  </el-table-column>\n                </el-table>\n  \n                <!-- 分页查询的 G -->\n                <div class=\"block\" style=\"margin-top:15px\">\n                  <el-pagination\n                    @size-change=\"handleSizeChangeG\"\n                    @current-change=\"handleCurrentChangeG\"\n                    :current-page=\"currentPageG\"\n                    :page-size=\"100\"\n                    :page-sizes=\"[2, 5, 8, 100]\"   \n                    layout=\"total, sizes, prev, pager, next, jumper\"\n                    :total=\"countG\">\n                  </el-pagination>\n                </div>\n              </div>\n                <!--添加按钮的代码 G-->\n                <el-dialog title=\"添加城市景点信息\" :visible.sync=\"addVisibleG\" width=\"50%\" @close=\"resetG\">\n                  <el-form ref=\"formG\" :model=\"formG\" label-width=\"80px\">\n                        <el-form-item label=\"景点名称\">\n                            <el-input v-model=\"formG.name\"></el-input>\n                        </el-form-item>\n                        <!-- <el-form-item label=\"景点名称\">\n                            <el-input v-model=\"form.peopleId\"></el-input>\n                        </el-form-item> -->\n                        <el-form-item label=\"景点介绍\">\n                          <el-input :rows=\"5\" type=\"textarea\" v-model=\"formG.introduction\"></el-input>\n                        </el-form-item>\n                        \n                        <el-form-item>\n                            <el-button type=\"primary\" @click=\"addScenery\">添加</el-button>\n                            <el-button @click=\"clearInput\">重置</el-button>\n                        </el-form-item>\n                  </el-form>\n                </el-dialog>\n  \n                <!--更新的按钮 G-->\n                <el-dialog title=\"更新城市信息\" :visible.sync=\"updateVisibleG\" width=\"50%\" @close=\"resetG\" >\n                  <el-form ref=\"formG\" :model=\"formG\" label-width=\"80px\">\n                        <el-form-item label=\"景点名称\">\n                            <el-input v-model=\"formG.name\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"景点介绍\">\n                          <el-input :rows=\"5\" type=\"textarea\" v-model=\"formG.introduction\"></el-input>\n                        </el-form-item>\n  \n                        <el-form-item>\n                            <el-button type=\"primary\" @click=\"updateScenery\">保存</el-button>\n                            <!-- <el-button @click=\"clearInput\">重置</el-button> -->\n                        </el-form-item>\n                  </el-form>\n                </el-dialog>\n\n                    </el-main>\n                </el-container>\n  \n    </div>\n  </template>\n  \n  <script>\n  \n  export default {\n    name: \"CityManage\",\n    components:{\n    },\n    mounted:function(){\n      // 查询左侧的一个诗人栏\n      this.queryPeople()\n      this.queryCity()\n      //在页面打开后先将城市的信息放入选择框中\n      // this.$http.get(\"Province\")\n      //   .then(response=>{\n      //     this.CityDate = response.data\n\n      //     for(let i = 0; i < this.CityDate.length; i++){\n      //         var tmp = {}\n      //         tmp.value = (i+1).toString()\n      //         tmp.label = this.CityDate[i].province\n      //         this.options.push(tmp)\n              \n      //         //通过省份查询城市\n      //         this.$http.get(\"City\",{\n      //           params: {\n      //             province : this.CityDate[i].province\n      //           }\n      //         })\n      //         .then(response=>{\n      //           var children = []\n      //           for(let n = 0; n < response.data.length; n++){\n      //             var tmp = {}\n      //             tmp.value = (n+1).toString()\n      //             tmp.label = response.data[n].cname\n      //             children.push(tmp)\n      //           }\n      //           this.options[i].children = children\n      //           // console.log(children)\n      //         })\n      //     }   \n      //     //将获得的信息添加到option数组对象当中\n      //     console.log(this.options)  \n      //   })\n      //   .catch(function(error){\n      //     console.log(error)\n      // })\n    },\n    \n    data() {\n      return {\n        PeopleValue : \"\",//第一个选择器中诗人的值\n        CityValue : \"\",//第二个选择器中城市的值\n        GroupValue : \"\",//第三个选择器中组的值\n        ExperienceValue : \"\",//第四个选择器诗人经历的值\n\n        peopleName : [],//选择器中的诗人姓名\n        cityName :[],//选择器中的城市名称\n\n        \n\n        options: [{\n          value: 'zhinan',\n          label: '指南',\n          children: [{\n            value: 'shejiyuanze',\n            label: '设计原则',\n                    }]\n          }],\n \n        //------Group的设置\n        GroupData:[],//所有诗人城市组信息\n        currentPageG : 1,//当前的\n        countG : 0,//分页查询页面总数\n        pageNumG : 1,//\n        pageSizeG : 100,//默认的分页大小\n        addVisibleG : false,//添加的显示框\n        updateVisibleG : false,//更新的显示框\n        formG: {\n                  peopleId : Number,//诗人外键\n                  cityId : Number,//城市外键\n                  beginYear: '', // 开始年份\n                  endYear: '', // 结束年份\n              },\n      }\n    },\n\n    methods:{\n      //选择器改变时 \n      displayDiv1(val){\n        console.log(this.PeopleValue.name)\n        \n        if(this.PeopleValue.name != undefined && this.CityValue.cname != undefined ){\n          this.queryGroup()\n        }\n        // this.form.peopleId = this.value.id\n        // console.log(this.form)\n        // this.querySceneryByPeopleName()\n      },\n      displayDiv2(val){\n        console.log(this.CityValue.cname)\n        // console.log(this.CityValue.id)\n        if(this.PeopleValue.name != undefined && this.CityValue.cname != undefined ){\n          this.queryGroup()\n        }\n        // if(this.CityValue.length == 0){\n        //   return\n        // }\n\n        // const checkedNodes = this.$refs['cascaderAddr'].getCheckedNodes() // 获取当前点击的节点\n        // var cname = checkedNodes[0].data.label\n        // console.log(cname)\n      \n        // console.log(checkedNodes)\n        // console.log(checkedNodes[0].data.label) // 获取当前点击的节点的label\n       \n        // console.log(checkedNodes[0].pathLabels) // 获取由 label 组成的数组\n      },\n      displayDiv3(val){\n        // this.formG.peopleId = this.value.id\n        // console.log(this.form)\n        this.querySceneryByPeopleName()\n      },\n      displayDiv4(val){\n        // this.form.peopleId = this.value.id\n        // console.log(this.form)\n        this.querySceneryByPeopleName()\n      },\n\n      //查询诗人信息\n      queryPeople(){\n        this.$http.get(\"people\")\n        .then(response=>{\n          this.peopleName = response.data\n        })\n        .catch(function(error){\n          console.log(error)\n      })\n      },\n      queryCity(){\n        this.$http.get(\"City\")\n        .then(response=>{\n          this.cityName = response.data\n          // console.log(this.cityName)\n        })\n        .catch(function(error){\n          console.log(error)\n      })\n      },\n      queryGroup(){\n        this.$http.get(\"queryGroupByPeopleAndCityPage\",{params:{\n          pageNum : this.pageNumG,\n          pageSize : this.pageSizeG,\n          name : this.PeopleValue.name,\n          cname : this.CityValue.cname\n        }})\n        .then(response=>{\n          this.GroupData = response.data.data\n          this.countG = response.data.count\n          // console.log(this.GroupData)\n        })\n        .catch(function(error){\n          console.log(error)\n      })\n\n      },\n  \n      //监听操作按钮\n      handleEditG(index, row) {\n        this.updateVisible = true\n        this.formG = row\n        // console.log(index, row);\n      },\n      //删除操作\n      //删除按钮\n      handleDeleteG(index, row) {\n        // console.log(row.id);\n         this.$confirm('此操作将永久删除该条信息, 是否继续?', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(() => {\n            this.$http.delete(\"/Scenery/\" + row.id).then(res=>{\n              if(res){\n                this.$message({\n                  type: 'success',\n                  message: '删除成功!'\n                })\n                this.querySceneryByPeopleName()\n              }\n            })\n          }).catch(() => {\n            this.$message({\n              type: 'info',\n              message: '已取消删除'\n            });          \n          });\n      },\n      //批量删除\n      handleSelectionChangeG(val){\n        this.multipleSelection = val\n      },\n      deleteMultipleCityG(){\n        let ids = this.multipleSelection.map(v => v.id)\n        this.$confirm('此操作将永久删除该条信息, 是否继续?', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(() => {\n            this.$http.post(\"/Scenery/batch\",ids).then(res=>{\n              if(res){\n                this.$message({\n                  type: 'success',\n                  message: '删除成功!'\n                })\n                this.querySceneryByPeopleName()\n              }\n            })\n          }).catch(() => {\n            this.$message({\n              type: 'info',\n              message: '已取消删除'\n            });          \n          });\n      },\n      //监听pageNum\n       handleCurrentChangeG(pageNum){\n        // console.log(pageNum);\n        this.pageNumG =pageNum\n        this.queryGroup()\n      },\n  \n      //监听pageSize的\n      handleSizeChangeG(pageSize){\n        // console.log(pageSize);\n        this.pageSizG = pageSize\n        this.queryGroup()\n      },\n  \n  \n      //添加窗体的操作\n      //清空\n      clearInput(){\n              this.formG.name = ''\n              this.formG.introduction = ''\n          },\n      //添加和更新城市的函数\n      saveScenery(){\n        // this.form.peopleId = \n        this.$http.post(\"saveScenery\",this.formG)\n              .then(res => {\n                  if(res){\n                    this.$message.success('保存成功');\n                    this.addVisible = false\n                    this.updateVisible = false\n                  }\n                  else{\n                    this.$message.error(\"保存失败\")\n                  }\n              })\n              .catch(function (error) {\n                  console.log(error);\n              })\n          this.querySceneryByPeopleName()\n      },\n      //添加城市信息\n      addScenery(){  \n        this.saveScenery()\n        this.querySceneryByPeopleName()\n        this.clearFormG()\n      },\n      \n  \n      //更新城市信息\n      updateScenery(){\n        \n        this.saveScenery()\n        this.querySceneryByPeopleName()\n        this.clearFormG()\n      },\n      //清空form中信息\n      clearFormG(){\n        this.formG.id = null,\n        this.formG.peopleId = Number,\n        this.formG.cityId = Number,\n        this.formG.endYear = \"\",\n        this.formG.endYear = \"\"\n      },\n      // diolag点击叉叉后\n      resetG(){\n          this.clearFormG()\n          this.queryGroup()\n      },\n      // 新增的按钮\n      addButtonG(){\n        console.log(this.value)\n        if(this.PeopleValue.id == null || this.CityValue.id == null){\n          this.$message('请先选择诗人和城市');\n        }\n        else{\n          this.addVisibleG = true\n        }\n      },\n      //批量删除按钮\n      deleteButtonG(){\n        if(this.value.id == null){\n          this.$message('请先选择诗人');\n        }\n        else{\n          this.deleteMultipleCity()\n        }\n      },\n\n      //----------------------\n\n\n    },\n    watched : {\n      \n    }\n  };\n  </script>\n  \n  <style scoped>\n  \n  .el-pagination{\n    text-align: center;\n  }\n  .el-autocomplete{\n    width: 120px;\n  }\n  </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}