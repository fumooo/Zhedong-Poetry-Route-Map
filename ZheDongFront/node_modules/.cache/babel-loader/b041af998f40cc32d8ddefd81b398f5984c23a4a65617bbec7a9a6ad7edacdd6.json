{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"window\",\n  data() {\n    return {\n      tabIs: false,\n      cityInfom: true,\n      activeName: \"first\",\n      activeNames: ['1']\n    };\n  },\n  methods: {\n    handleChange() {\n      console.log(111);\n    },\n    handleTabsEdit(targetName, action) {\n      if (action === 'add') {\n        let newTabName = ++this.tabIndex + '';\n        this.editableTabs.push({\n          title: 'New Tab',\n          name: newTabName,\n          content: 'New Tab content'\n        });\n        this.editableTabsValue = newTabName;\n      }\n      if (action === 'remove') {\n        let tabs = this.editableTabs;\n        let activeName = this.editableTabsValue;\n        if (activeName === targetName) {\n          tabs.forEach((tab, index) => {\n            if (tab.name === targetName) {\n              let nextTab = tabs[index + 1] || tabs[index - 1];\n              if (nextTab) {\n                activeName = nextTab.name;\n              }\n            }\n          });\n        }\n        this.editableTabsValue = activeName;\n        this.editableTabs = tabs.filter(tab => tab.name !== targetName);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAyCA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACAC;IACA;IAEAC;MACA;QACA;QACA;UACAC;UACAV;UACAW;QACA;QACA;MACA;MACA;QACA;QACA;QACA;UACAC;YACA;cACA;cACA;gBACAR;cACA;YACA;UACA;QACA;QAEA;QACA;MACA;IACA;EACA;AACA","names":["name","data","tabIs","cityInfom","activeName","activeNames","methods","handleChange","console","handleTabsEdit","title","content","tabs"],"sourceRoot":"src/components/Rigth_window","sources":["Windows.vue"],"sourcesContent":["<template>\n  <div>\n\n    <el-tabs v-if='tabIs' v-model=\"activeName\" type=\"card\" >\n    <el-tab-pane label=\"用户管理1\" name=\"first\">用户管理\n      <el-collapse v-model=\"activeNames\" @change=\"handleChange\" >\n        <el-collapse-item title=\"一致性 Consistency\" name=\"1\">\n            <div>与现实生活一致：与现实生活的流程、逻辑保持一致，遵循用户习惯的语言和概念；</div>\n            <div>在界面中一致：所有的元素和结构需保持一致，比如：设计样式、图标和文本、元素的位置等。</div>\n        </el-collapse-item>\n        <el-collapse-item title=\"反馈 Feedback\" name=\"2\">\n            <div>控制反馈：通过界面样式和交互动效让用户可以清晰的感知自己的操作；</div>\n            <div>页面反馈：操作后，通过页面元素的变化清晰地展现当前状态。</div>\n        </el-collapse-item>\n        <el-collapse-item title=\"效率 Efficiency\" name=\"3\">\n          <div>简化流程：设计简洁直观的操作流程；</div>\n            <div>清晰明确：语言表达清晰且表意明确，让用户快速理解进而作出决策；</div>\n            <div>帮助用户识别：界面简单直白，让用户快速识别而非回忆，减少用户记忆负担。</div>\n        </el-collapse-item>\n        <el-collapse-item title=\"可控 Controllability\" name=\"4\">\n            <div>用户决策：根据场景可给予用户操作建议或安全提示，但不能代替用户进行决策；</div>\n            <div>结果可控：用户可以自由的进行操作，包括撤销、回退和终止当前操作等。</div>\n        </el-collapse-item>\n      </el-collapse>\n    </el-tab-pane>\n    <!-- <el-tab-pane label=\"配置管理\" name=\"second\">配置管理</el-tab-pane>\n    <el-tab-pane label=\"角色管理\" name=\"third\">角色管理</el-tab-pane>\n    <el-tab-pane label=\"定时任务补偿\" name=\"fourth\">定时任务补偿</el-tab-pane> -->\n    </el-tabs>\n\n    <div v-if=\"cityInfom\">\n      <span>\n      <p style=\"text-align: center; margin:10px\">唐诗作品按地区统计</p>\n      </span>\n      <hr style=\"margin:0px;background-color:#eee;height:0.5px;border:none;\"/>\n    </div>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"window\",\n  data() {\n    return {\n      tabIs : false,\n      cityInfom : true,\n      activeName:\"first\",\n      activeNames:['1'],\n    };\n  },\n  methods:{\n    handleChange(){\n      console.log(111);\n    },\n     \n     handleTabsEdit(targetName, action) {\n        if (action === 'add') {\n          let newTabName = ++this.tabIndex + '';\n          this.editableTabs.push({\n            title: 'New Tab',\n            name: newTabName,\n            content: 'New Tab content'\n          });\n          this.editableTabsValue = newTabName;\n        }\n        if (action === 'remove') {\n          let tabs = this.editableTabs;\n          let activeName = this.editableTabsValue;\n          if (activeName === targetName) {\n            tabs.forEach((tab, index) => {\n              if (tab.name === targetName) {\n                let nextTab = tabs[index + 1] || tabs[index - 1];\n                if (nextTab) {\n                  activeName = nextTab.name;\n                }\n              }\n            });\n          }\n          \n          this.editableTabsValue = activeName;\n          this.editableTabs = tabs.filter(tab => tab.name !== targetName);\n        }\n      }\n    }\n};\n</script>\n\n<style scoped>\n\n</style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}