{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"RigthWindow\",\n  data() {\n    return {\n      tabIs: false,\n      //是否显示右侧诗人信息，在左边多选框改变之后\n      cityInfom: true,\n      //是否显示唐诗作品按地区统计信息\n      tableData: [],\n      //用来存储每个城市诗歌的数量\n      activeName: \"\",\n      //用于指定是哪一个tab打开\n      editableTabs: [],\n      //用于存储tab内容\n      activeNames: ['0', '1'],\n      peopleInformation: [],\n      //诗人的信息存储\n      sceneryInfom: [],\n      //通过诗人id查询出其访问的景点名称\n      imgsrc: [],\n      //用来存储标签上图片的路径\n      img: \"\"\n    };\n  },\n  methods: {\n    handleClick(tab, event) {\n      // console.log(tab, event);\n    },\n    //用于去返回一个链接\n    GetFullHref(name) {\n      return 'https://search.bilibili.com/all?keyword=' + name;\n    },\n    //使用此方法去查询诗人的信息\n    GetpeopleInformation(id) {\n      return this.$http.get(\"peopleById\", {\n        params: {\n          id: id\n        }\n      }).then(response => {\n        this.peopleInformation.push(response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    //使用此方法去查询诗人所拜访景点的信息\n    GetsceneryInfom(id) {\n      return this.$http.get(\"querySceneryById\", {\n        params: {\n          id: id\n        }\n      }).then(response => {\n        this.sceneryInfom.push(response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  },\n  mounted: function () {\n    //用来查询唐诗作品按地区统计\n    this.$http.get(\"queryCityPoemNumber\").then(response => {\n      this.tableData = response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n    this.imgsrc.push(require('../../assets/point/marker.azure.png'));\n    this.imgsrc.push(require('../../assets/point/marker.green.png'));\n    this.imgsrc.push(require('../../assets/point/marker.red.png'));\n    this.imgsrc.push(require('../../assets/point/marker.azure1.png'));\n  },\n  computed: {\n    poemList() {\n      return this.$store.state.poemList;\n    }\n  },\n  watch: {\n    poemList(newVal) {\n      this.peopleInformation = [];\n      this.sceneryInfom = [];\n      //判断是否显示右边菜单\n      if (newVal.length == 0) {\n        this.tabIs = false;\n        this.cityInfom = true;\n        return;\n      } else if (newVal.length > 0) {\n        this.tabIs = true;\n        this.cityInfom = false;\n      }\n      // console.log(newVal);\n      //用promise.all去进行使用\n      var resdata;\n      let people = [];\n      let peopleName = [];\n      for (let i of newVal) {\n        people.push(new Promise((resolve, reject) => {\n          this.$http.get(`peopleById/?id=${i}`).then(response => {\n            resolve(response);\n          }), error => {\n            reject(error);\n          };\n        }));\n      }\n      Promise.all(people).then(res => {\n        for (let i of res) {\n          this.peopleInformation.push(i.data);\n          resdata = JSON.parse(JSON.stringify(i.data));\n          this.activeName = resdata.name;\n          console.log(i.data.name);\n        }\n      });\n\n      // console.log(resdata)\n      // console.log(this.peopleInformation[this.peopleInformation.length-1].name)\n      // console.log(people[people.length-1].data.name)\n      // this.activeName = people[people.length-1].name\n      //查询诗人访问的景点信息\n      let scenery = [];\n      for (let i of newVal) {\n        scenery.push(new Promise((resolve, reject) => {\n          this.$http.get(`querySceneryById/?id=${i}`).then(response => {\n            resolve(response);\n          }), error => {\n            reject(error);\n          };\n        }));\n      }\n      Promise.all(scenery).then(res => {\n        for (let i of res) {\n          this.sceneryInfom.push(i.data);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAkDA;EACAA;EACAC;IACA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;IACA;EACA;EACAC;IACAC;MACA;IAAA,CACA;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;QACAC;UACAC;QACA;MACA,GACAC;QACA;MACA,GACAC;QACAC;MACA;IACA;IACA;IACAC;MACA;QACAL;UACAC;QACA;MACA,GACAC;QACA;MACA,GACAC;QACAC;MACA;IACA;EACA;EACAE;IACA;IACA,sCACAJ;MACA;IACA,GACAC;MACAC;IACA;IACA;IACA;IACA;IACA;EACA;EACAG;IACAC;MACA;IACA;EACA;EACAC;IACAD;MAEA;MACA;MACA;MACA;QACA;QACA;QACA;MACA,OACA;QACA;QACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;QACAE,YACA;UACA,eACA,sBACA;YACAC;UACA;YACAC;UACA;QACA,GACA;MACA;MACAC;QACA;UACA;UACAC;UACA;UACAV;QACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;QACAW,aACA;UACA,eACA,4BACA;YACAJ;UACA;YACAC;UACA;QACA,GACA;MACA;MACAC;QACA;UACA;QACA;MACA;IAEA;EACA;AAEA","names":["name","data","tabIs","cityInfom","tableData","activeName","editableTabs","activeNames","peopleInformation","sceneryInfom","imgsrc","img","methods","handleClick","GetFullHref","GetpeopleInformation","params","id","then","catch","console","GetsceneryInfom","mounted","computed","poemList","watch","people","resolve","reject","Promise","resdata","scenery"],"sourceRoot":"src/components/Rigth_window","sources":["Right_window.vue"],"sourcesContent":["<template>\n  <div>\n    <el-tabs v-if='tabIs' v-model=\"activeName\" type=\"card\" @tab-click=\"handleClick\">\n    <el-tab-pane v-for=\"(item,index) in peopleInformation\" :key=\"index\" :name=\"item.name\">\n      <span slot=\"label\"><img :src=\"imgsrc[index]\" width=\"15\" height=\"15\">{{item.name}}</span>\n      <el-collapse v-model=\"activeNames\">\n        <el-collapse-item title=\"诗人简介\" name=\"0\">\n            <div>{{item.introduction}}</div>\n        </el-collapse-item>\n        <el-collapse-item title=\"诗人途径景点\" name=\"1\">\n            <div v-for=\"(item,indexx) in sceneryInfom[index]\" :key=\"indexx\">\n              景点名称：<a :href=\"GetFullHref(item.name)\" target=\"_blank\">{{item.name}}</a>\n            </div>\n        </el-collapse-item>\n      </el-collapse>\n    </el-tab-pane>\n    </el-tabs>\n\n    <!-- 用于显示唐诗作品按地区统计 -->\n    <div v-if=\"cityInfom\">\n      <span>\n      <p style=\"text-align: center; margin:10px\">唐诗作品按地区统计</p>\n      </span>\n      <hr style=\"margin:0px;background-color:grey;height:0.7px;border:none;\">\n      \n      <el-table\n      size=\"small\"\n      :data=\"tableData\"\n      style=\"width: 100%\">\n      <el-table-column \n        header-align=\"center\"\n        align=\"center\"\n        prop=\"cname\"\n        label=\"城市\"\n        width=\"150\">\n      </el-table-column>\n      <el-table-column\n        header-align=\"center\"\n        align=\"center\"\n        prop=\"cityPoemNumber\"\n        label=\"诗歌数量\"\n        width=\"150\">\n      </el-table-column>\n      </el-table>\n    </div>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"RigthWindow\",\n  data() {\n    return {\n      tabIs : false,//是否显示右侧诗人信息，在左边多选框改变之后\n      cityInfom : true,//是否显示唐诗作品按地区统计信息\n      tableData:[],//用来存储每个城市诗歌的数量\n      activeName:\"\",//用于指定是哪一个tab打开\n      editableTabs:[],//用于存储tab内容\n      activeNames:['0','1'],\n      peopleInformation:[],//诗人的信息存储\n      sceneryInfom:[],//通过诗人id查询出其访问的景点名称\n      imgsrc:[],//用来存储标签上图片的路径\n      img:\"\"\n    };\n  },\n  methods:{\n      handleClick(tab, event) {\n        // console.log(tab, event);\n      },\n      //用于去返回一个链接\n      GetFullHref(name){\n        return 'https://search.bilibili.com/all?keyword=' + name\n      },\n      //使用此方法去查询诗人的信息\n      GetpeopleInformation(id){\n        return this.$http.get(\"peopleById\",{\n          params:{\n            id : id\n          }\n        })\n        .then((response)=>{\n          this.peopleInformation.push(response.data)\n        })\n         .catch(function (error) {\n               console.log(error)\n        }) \n      },\n      //使用此方法去查询诗人所拜访景点的信息\n      GetsceneryInfom(id){\n        return this.$http.get(\"querySceneryById\",{\n          params:{\n            id : id\n          }\n        })\n        .then((response)=>{\n          this.sceneryInfom.push(response.data)\n        })\n         .catch(function (error) {\n               console.log(error)\n        }) \n      },\n    },\n    mounted:function(){\n      //用来查询唐诗作品按地区统计\n      this.$http.get(\"queryCityPoemNumber\")\n      .then((response)=>{ \n        this.tableData = response.data\n      }) \n      .catch(function (error) {\n        console.log(error);\n      })\n      this.imgsrc.push(require('../../assets/point/marker.azure.png'))\n      this.imgsrc.push(require('../../assets/point/marker.green.png'))\n      this.imgsrc.push(require('../../assets/point/marker.red.png'))\n      this.imgsrc.push(require('../../assets/point/marker.azure1.png'))\n    },\n    computed:{\n      poemList(){\n\t\t\treturn this.$store.state.poemList\n\t\t},\n    },\n    watch:{\n      poemList(newVal){\n        \n        this.peopleInformation = []\n        this.sceneryInfom = []\n        //判断是否显示右边菜单\n        if(newVal.length == 0 ){\n          this.tabIs = false\n          this.cityInfom = true\n          return\n        }\n        else if(newVal.length > 0){\n          this.tabIs = true\n          this.cityInfom = false\n        }\n        // console.log(newVal);\n        //用promise.all去进行使用\n        var resdata\n        let people = []\n        let peopleName = [] \n        for(let i of newVal){\n          people.push(\n            new Promise((resolve,reject)=>{\n              this.$http.get(\n                `peopleById/?id=${i}`\n              ).then(response=>{\n                resolve(response)\n              }),error=>{\n                reject(error)\n              }\n            })\n          )\n        }\n        Promise.all(people).then(res=>{\n          for(let i of res){\n            this.peopleInformation.push(i.data)\n            resdata=JSON.parse(JSON.stringify(i.data))\n            this.activeName = resdata.name\n            console.log(i.data.name)\n          }\n        })\n        \n        // console.log(resdata)\n        // console.log(this.peopleInformation[this.peopleInformation.length-1].name)\n        // console.log(people[people.length-1].data.name)\n        // this.activeName = people[people.length-1].name\n        //查询诗人访问的景点信息\n        let scenery = []\n        for(let i of newVal){\n          scenery.push(\n            new Promise((resolve,reject)=>{\n              this.$http.get(\n                `querySceneryById/?id=${i}`\n              ).then(response=>{\n                resolve(response)\n              }),error=>{\n                reject(error)\n              }\n            })\n          )\n        }\n        Promise.all(scenery).then(res=>{\n          for(let i of res){\n            this.sceneryInfom.push(i.data)\n          }\n        })\n\n      }\n    },\n\n};\n</script>\n\n<style scoped>\n\n</style> \n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}