{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"CityManage\",\n  components: {},\n  mounted: function () {\n    // 查询左侧的一个诗人栏\n    this.queryPeople();\n\n    //在页面打开后先将城市的信息放入选择框中\n    this.$http.get(\"Province\").then(response => {\n      this.CityDate = response.data;\n      for (let i = 0; i < this.CityDate.length; i++) {\n        var tmp = {};\n        tmp.value = (i + 1).toString();\n        tmp.label = this.CityDate[i].province;\n        this.options.push(tmp);\n        //通过省份查询城市\n        this.$http.get(\"City\", {\n          params: {\n            province: this.CityDate[i].province\n          }\n        }).then(response => {\n          // console.log(response.data)\n          for (let n = 0; n < response.data.length; n++) {\n            var children = [];\n            var tmp = {};\n            tmp.value = (n + 1).toString();\n            tmp.label = response.data[n].cname;\n            console.log(tmp);\n            children.push(tmp);\n          }\n          console.log(children);\n        });\n      }\n      //将获得的信息添加到option数组对象当中\n      // console.log(this.options)  \n    }).catch(function (error) {\n      console.log(error);\n    });\n  },\n  data() {\n    return {\n      PeopleValue: \"\",\n      //第一个选择器中诗人的值\n      CityValue: \"\",\n      //第二个选择器中城市的值\n      GroupValue: \"\",\n      //第三个选择器中组的值\n      ExperienceValue: \"\",\n      //第四个选择器诗人经历的值\n\n      peopleName: [],\n      //选择器中的诗人姓名\n      cityName: [],\n      //选择器中的城市名称\n\n      CityDate: [],\n      //所有城市信息\n\n      options: [],\n      tableData: [],\n      currentPage: 1,\n      //当前的\n      count: 0,\n      //分页查询页面总数\n      pageNum: 1,\n      //\n      pageSize: 100,\n      //默认的分页大小\n\n      addVisible: false,\n      //添加的显示框\n      updateVisible: false,\n      //更新的显示框\n\n      form: {\n        peopleId: Number,\n        //诗人外键\n        name: '',\n        // 城市名\n        introduction: '',\n        //介绍\n        picture: '' //图片\n      }\n    };\n  },\n\n  methods: {\n    //选择器改变时 \n    displayDiv1(val) {\n      console.log(this.PeopleValue.name);\n      // this.form.peopleId = this.value.id\n      // console.log(this.form)\n      // this.querySceneryByPeopleName()\n    },\n\n    displayDiv2(val) {\n      // console.log(this.CityValue.length)\n\n      if (this.CityValue.length == 0) {\n        return;\n      }\n      const checkedNodes = this.$refs['cascaderAddr'].getCheckedNodes(); // 获取当前点击的节点\n      var cname = checkedNodes[0].data.label;\n      console.log(cname);\n\n      // console.log(checkedNodes)\n      // console.log(checkedNodes[0].data.label) // 获取当前点击的节点的label\n\n      // console.log(checkedNodes[0].pathLabels) // 获取由 label 组成的数组\n    },\n\n    displayDiv3(val) {\n      this.form.peopleId = this.value.id;\n      // console.log(this.form)\n      this.querySceneryByPeopleName();\n    },\n    displayDiv4(val) {\n      this.form.peopleId = this.value.id;\n      // console.log(this.form)\n      this.querySceneryByPeopleName();\n    },\n    //查询诗人信息\n    queryPeople() {\n      this.$http.get(\"people\").then(response => {\n        this.peopleName = response.data;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    //将分页查询的axios分装在方法中\n    querySceneryByPeopleName() {\n      this.$http.get(\"querySceneryByPeopleNamePage\", {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.value.name\n        }\n      }).then(response => {\n        this.tableData = response.data.data;\n        this.count = response.data.count;\n        // console.log(this.tableData)\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    // 重置两个搜索框\n\n    //监听操作按钮\n    handleEdit(index, row) {\n      this.updateVisible = true;\n      this.form = row;\n      // console.log(index, row);\n    },\n\n    //删除操作\n    //删除按钮\n    handleDelete(index, row) {\n      // console.log(row.id);\n      this.$confirm('此操作将永久删除该条信息, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$http.delete(\"/Scenery/\" + row.id).then(res => {\n          if (res) {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n            this.querySceneryByPeopleName();\n          }\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    //批量删除\n    handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    deleteMultipleCity() {\n      let ids = this.multipleSelection.map(v => v.id);\n      this.$confirm('此操作将永久删除该条信息, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$http.post(\"/Scenery/batch\", ids).then(res => {\n          if (res) {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n            this.querySceneryByPeopleName();\n          }\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    //监听pageNum\n    handleCurrentChange(pageNum) {\n      // console.log(pageNum);\n      this.pageNum = pageNum;\n      this.querySceneryByPeopleName();\n    },\n    //监听pageSize的\n    handleSizeChange(pageSize) {\n      // console.log(pageSize);\n      this.pageSize = pageSize;\n      this.querySceneryByPeopleName();\n    },\n    // 监听CityNameSearch\n    CitySearch() {\n      this.queryCity();\n    },\n    // 监听CityProvinceSearch\n    ProvinceSearch() {\n      this.queryCity();\n    },\n    //添加窗体的操作\n    //清空\n    clearInput() {\n      this.form.name = '';\n      this.form.introduction = '';\n    },\n    //添加和更新城市的函数\n    saveScenery() {\n      // this.form.peopleId = \n      this.$http.post(\"saveScenery\", this.form).then(res => {\n        if (res) {\n          this.$message.success('保存成功');\n          this.addVisible = false;\n          this.updateVisible = false;\n        } else {\n          this.$message.error(\"保存失败\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.querySceneryByPeopleName();\n    },\n    //添加城市信息\n    addScenery() {\n      this.saveScenery();\n      this.querySceneryByPeopleName();\n      this.clearForm();\n    },\n    //删除图片\n    handleRemove(file) {\n      console.log(file);\n    },\n    //放大看图片函数\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n    //更新城市信息\n    updateScenery() {\n      this.saveScenery();\n      this.querySceneryByPeopleName();\n      this.clearForm();\n    },\n    //清空form中信息\n    clearForm() {\n      this.form.id = null, this.form.peopleId = this.value.id, this.form.name = \"\", this.form.introduction = \"\", this.form.picture = \"\";\n    },\n    // diolag点击叉叉后\n    reset() {\n      this.clearForm();\n      this.querySceneryByPeopleName();\n    },\n    // 新增的按钮\n    addButton() {\n      console.log(this.value);\n      if (this.value.id == null) {\n        this.$message('请先选择诗人');\n      } else {\n        this.addVisible = true;\n      }\n    },\n    //批量删除按钮\n    deleteButton() {\n      if (this.value.id == null) {\n        this.$message('请先选择诗人');\n      } else {\n        this.deleteMultipleCity();\n      }\n    },\n    //上传图片\n    handle_success(res) {\n      console.log(res.data);\n      this.$message.success(\"图片上传成功\");\n      this.form.picture = res.data;\n\n      //   return (this.form.imgUrl = res.data);\n    }\n  },\n\n  watched: {}\n};","map":{"version":3,"mappings":";AAiKA;EACAA;EACAC,aACA;EACAC;IACA;IACA;;IAEA;IACA,2BACAC;MACA;MAEA;QACA;QACAC;QACAA;QACA;QACA;QACA;UACAC;YACAC;UACA;QACA,GACAH;UACA;UACA;YACA;YACA;YACAC;YACAA;YACAG;YACAC;UACA;UACAD;QACA;MACA;MACA;MACA;IACA,GACAE;MACAF;IACA;EACA;EAEAG;IACA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;;MAEAC;MAAA;MACAC;MAAA;;MAEAC;MAAA;;MAEAC,WAEA;MAEAC;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;;MAEAC;MAAA;MACAC;MAAA;;MAEAC;QACAC;QAAA;QACA3B;QAAA;QACA4B;QAAA;QACAC;MACA;IACA;EACA;;EAEAC;IACA;IACAC;MACAxB;MACA;MACA;MACA;IACA;;IACAyB;MACA;;MAEA;QACA;MACA;MAEA;MACA;MACAzB;;MAEA;MACA;;MAEA;IACA;;IACA0B;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA,yBACAhC;QACA;MACA,GACAM;QACAF;MACA;IACA;IAIA;IACA6B;MACA;QACA/B;UACAiB;UACAC;UACAvB;QAEA;MACA,GACAG;QACA;QACA;QACA;MACA,GACAM;QACAF;MACA;IACA;IAEA;;IAGA;IACA8B;MACA;MACA;MACA;IACA;;IACA;IACA;IACAC;MACA;MACA;QACAC;QACAC;QACAC;MACA;QACA;UACA;YACA;cACAA;cACAC;YACA;YACA;UACA;QACA;MACA;QACA;UACAD;UACAC;QACA;MACA;IACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;QACAL;QACAC;QACAC;MACA;QACA;UACA;YACA;cACAA;cACAC;YACA;YACA;UACA;QACA;MACA;QACA;UACAD;UACAC;QACA;MACA;IACA;IACA;IACAG;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA;IACA;IAEA;IACAC;MACA;IACA;IAIA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA;MACA,0CACA/C;QACA;UACA;UACA;UACA;QACA,OACA;UACA;QACA;MACA,GACAM;QACAF;MACA;MACA;IACA;IACA;IACA4C;MACA;MACA;MACA;IACA;IACA;IACAC;MACA7C;IACA;IACA;IACA8C;MACA;MACA;IACA;IAEA;IACAC;MAEA;MACA;MACA;IACA;IACA;IACAC;MACA,qBACA,oCACA,qBACA,6BACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACAlD;MACA;QACA;MACA,OACA;QACA;MACA;IACA;IACA;IACAmD;MACA;QACA;MACA,OACA;QACA;MACA;IACA;IACA;IACAC;MACApD;MACA;MACA;;MAEA;IACA;EACA;;EACAqD,UAEA;AACA","names":["name","components","mounted","then","tmp","params","province","console","children","catch","data","PeopleValue","CityValue","GroupValue","ExperienceValue","peopleName","cityName","CityDate","options","tableData","currentPage","count","pageNum","pageSize","addVisible","updateVisible","form","peopleId","introduction","picture","methods","displayDiv1","displayDiv2","displayDiv3","displayDiv4","queryPeople","querySceneryByPeopleName","handleEdit","handleDelete","confirmButtonText","cancelButtonText","type","message","handleSelectionChange","deleteMultipleCity","handleCurrentChange","handleSizeChange","CitySearch","ProvinceSearch","clearInput","saveScenery","addScenery","handleRemove","handlePictureCardPreview","updateScenery","clearForm","reset","addButton","deleteButton","handle_success","watched"],"sourceRoot":"src/view/back/RouterMain/PeoplePoem","sources":["PeoplePoemManage.vue"],"sourcesContent":["<template>\n    <div>\n      <el-container>\n        \n        \n          <!-- 主页面查询 -->\n          <el-main>\n               <div style=\"margin-bottom:15px\">\n                <!-- 选择器 选择诗人 -->\n                请选择诗人\n                <el-select v-model=\"PeopleValue\" value-key=\"name\" filterable placeholder=\"请选择\" @change=\"displayDiv1\" clearable>\n                  <el-option\n                    v-for=\"item in peopleName\"\n                    :key=\"item.id\"\n                    :label=\"item.name\"\n                    :value=\"item\"\n                    >\n                  </el-option>\n                </el-select>\n\n                请选择城市\n                <el-cascader ref=\"cascaderAddr\" v-model=\"CityValue\" :options=\"options\" :show-all-levels=\"false\" clearable @change=\"displayDiv2\" ></el-cascader>\n                <!-- <el-select v-model=\"CityValue\" value-key=\"name\" filterable placeholder=\"请选择\" @change=\"displayDiv2\">\n                  <el-option\n                    v-for=\"item in cityName\"\n                    :key=\"item.id\"\n                    :label=\"item.name\"\n                    :value=\"item\"\n                    >\n                  </el-option>\n                </el-select> -->\n                <br>\n\n                请选择组选\n                <el-select v-model=\"GroupValue\" value-key=\"name\" filterable placeholder=\"请选择\" @change=\"displayDiv3\">\n                  <el-option\n                    v-for=\"item in peopleName\"\n                    :key=\"item.id\"\n                    :label=\"item.name\"\n                    :value=\"item\"\n                    >\n                  </el-option>\n                </el-select>\n                请选择经历\n                <el-select v-model=\"ExperienceValue\" value-key=\"name\" filterable placeholder=\"请选择\" @change=\"displayDiv4\">\n                  <el-option\n                    v-for=\"item in peopleName\"\n                    :key=\"item.id\"\n                    :label=\"item.name\"\n                    :value=\"item\"\n                    >\n                  </el-option>\n                </el-select>\n                \n\n                  <el-button type=\"primary\" style=\"margin-left:20px\" @click=\"addButton\"><i class=\"el-icon-plus\"></i>新增</el-button>\n                  <el-button type=\"primary\" @click=\"deleteButton\"><i class=\"el-icon-plus\"></i>批量删除</el-button>\n                  <el-button type=\"primary\" @click=\"deleteButton\"><i class=\"el-icon-plus\"></i>批量添加</el-button>\n                  <!-- <el-button type=\"primary\" style=\"margin-right:10px\" @click=\"refreshInput\"><i class=\"el-icon-refresh-right\"></i>重置</el-button> -->\n                  \n                  <!-- 城市搜索： <el-autocomplete @change=\"CitySearch\"\n                    class=\"inline-input\"\n                    v-model=\"CityNameSearch\"\n                    :fetch-suggestions=\"querySearch1\"\n                    placeholder=\"请输入城市\"\n                    @select=\"handleSelect1\"\n                    :trigger-on-focus=\"false\"\n                  ></el-autocomplete>\n                  省份搜索：<el-autocomplete @change=\"ProvinceSearch\"\n                    class=\"inline-input\"\n                    v-model=\"ProvinceNameSearch\"\n                    :fetch-suggestions=\"querySearch2\"\n                    placeholder=\"请输入省份\"\n                    @select=\"handleSelect2\"\n                    :trigger-on-focus=\"false\"\n                  ></el-autocomplete>  -->\n                </div>\n                \n                <!-- 分页查询的表格 -->\n                <el-table :data=\"tableData\"\n                border\n                  @selection-change=\"handleSelectionChange\">\n                  <el-table-column type=\"selection\"> </el-table-column>\n                  <el-table-column prop=\"id\" label=\"id\" align=\"center\"> </el-table-column>\n                  <el-table-column prop=\"poemTitle\" label=\"诗歌标题\" align=\"center\"> </el-table-column>\n                  <el-table-column prop=\"content\" label=\"诗歌内容\" align=\"center\" :show-overflow-tooltip=\"true\"> </el-table-column>\n                  <el-table-column prop=\"dynasty\" label=\"诗歌朝代\" align=\"center\" :show-overflow-tooltip=\"true\"> </el-table-column>\n                  <el-table-column prop=\"year\" label=\"诗歌年份\" align=\"center\" :show-overflow-tooltip=\"true\"> </el-table-column>\n                  <el-table-column prop=\"source\" label=\"诗歌来源\" align=\"center\" :show-overflow-tooltip=\"true\"> </el-table-column>\n                  <el-table-column prop=\"type\" label=\"诗歌内型\" align=\"center\" :show-overflow-tooltip=\"true\"> </el-table-column>\n                  \n                  <el-table-column align=\"center\"  label=\"操作\">\n                    <template slot-scope=\"scope\">\n                      <el-button\n                        size=\"mini\"\n                        @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n                      <el-button\n                        size=\"mini\"\n                        type=\"danger\"\n                        @click=\"handleDelete(scope.$index, scope.row)\">删除</el-button>\n                    </template>\n                  </el-table-column>\n                </el-table>\n  \n                <!-- 分页查询的 -->\n                <div class=\"block\" style=\"margin-top:15px\">\n                  <el-pagination\n                    @size-change=\"handleSizeChange\"\n                    @current-change=\"handleCurrentChange\"\n                    :current-page=\"currentPage\"\n                    :page-size=\"100\"\n                    :page-sizes=\"[2, 5, 8, 100]\"   \n                    layout=\"total, sizes, prev, pager, next, jumper\"\n                    :total=\"count\">\n                  </el-pagination>\n                </div>\n  \n                <!--添加按钮的代码-->\n                <el-dialog title=\"添加城市景点信息\" :visible.sync=\"addVisible\" width=\"50%\" @close=\"reset\">\n                  <el-form ref=\"form\" :model=\"form\" label-width=\"80px\">\n                        <el-form-item label=\"景点名称\">\n                            <el-input v-model=\"form.name\"></el-input>\n                        </el-form-item>\n                        <!-- <el-form-item label=\"景点名称\">\n                            <el-input v-model=\"form.peopleId\"></el-input>\n                        </el-form-item> -->\n                        <el-form-item label=\"景点介绍\">\n                          <el-input :rows=\"5\" type=\"textarea\" v-model=\"form.introduction\"></el-input>\n                        </el-form-item>\n                        \n                        <el-form-item>\n                            <el-button type=\"primary\" @click=\"addScenery\">添加</el-button>\n                            <el-button @click=\"clearInput\">重置</el-button>\n                        </el-form-item>\n                  </el-form>\n                </el-dialog>\n  \n                <!--更新的按钮-->\n                <el-dialog title=\"更新城市信息\" :visible.sync=\"updateVisible\" width=\"50%\" @close=\"reset\" >\n                  <el-form ref=\"form\" :model=\"form\" label-width=\"80px\">\n                        <el-form-item label=\"景点名称\">\n                            <el-input v-model=\"form.name\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"景点介绍\">\n                          <el-input :rows=\"5\" type=\"textarea\" v-model=\"form.introduction\"></el-input>\n                        </el-form-item>\n  \n                        <el-form-item>\n                            <el-button type=\"primary\" @click=\"updateScenery\">保存</el-button>\n                            <!-- <el-button @click=\"clearInput\">重置</el-button> -->\n                        </el-form-item>\n                  </el-form>\n                </el-dialog>\n                    </el-main>\n                </el-container>\n  \n    </div>\n  </template>\n  \n  <script>\n  \n  export default {\n    name: \"CityManage\",\n    components:{\n    },\n    mounted:function(){\n      // 查询左侧的一个诗人栏\n      this.queryPeople()\n\n      //在页面打开后先将城市的信息放入选择框中\n      this.$http.get(\"Province\")\n        .then(response=>{\n          this.CityDate = response.data\n\n          for(let i = 0; i < this.CityDate.length; i++){\n              var tmp = {}\n              tmp.value = (i+1).toString()\n              tmp.label = this.CityDate[i].province\n              this.options.push(tmp)\n              //通过省份查询城市\n              this.$http.get(\"City\",{\n                params: {\n                  province : this.CityDate[i].province\n                }\n              })\n              .then(response=>{\n                // console.log(response.data)\n                for(let n = 0; n < response.data.length; n++){\n                  var children = []\n                  var tmp = {}\n                  tmp.value = (n+1).toString()\n                  tmp.label = response.data[n].cname\n                  console.log(tmp)\n                  children.push(tmp)\n                }\n                console.log(children)\n              })\n          }   \n          //将获得的信息添加到option数组对象当中\n          // console.log(this.options)  \n        })\n        .catch(function(error){\n          console.log(error)\n      })\n    },\n    \n    data() {\n      return {\n        PeopleValue : \"\",//第一个选择器中诗人的值\n        CityValue : \"\",//第二个选择器中城市的值\n        GroupValue : \"\",//第三个选择器中组的值\n        ExperienceValue : \"\",//第四个选择器诗人经历的值\n\n        peopleName : [],//选择器中的诗人姓名\n        cityName :[],//选择器中的城市名称\n\n        CityDate:[],//所有城市信息\n\n        options :[\n\n        ],\n \n        tableData : [],\n        currentPage : 1,//当前的\n        count : 0,//分页查询页面总数\n        pageNum : 1,//\n        pageSize : 100,//默认的分页大小\n        \n        addVisible : false,//添加的显示框\n        updateVisible : false,//更新的显示框\n\n        form: {\n                  peopleId : Number,//诗人外键\n                  name: '', // 城市名\n                  introduction: '', //介绍\n                  picture: '', //图片\n              },\n      }\n    },\n\n    methods:{\n      //选择器改变时 \n      displayDiv1(val){\n        console.log(this.PeopleValue.name)\n        // this.form.peopleId = this.value.id\n        // console.log(this.form)\n        // this.querySceneryByPeopleName()\n      },\n      displayDiv2(val){\n        // console.log(this.CityValue.length)\n\n        if(this.CityValue.length == 0){\n          return\n        }\n\n        const checkedNodes = this.$refs['cascaderAddr'].getCheckedNodes() // 获取当前点击的节点\n        var cname = checkedNodes[0].data.label\n        console.log(cname)\n      \n        // console.log(checkedNodes)\n        // console.log(checkedNodes[0].data.label) // 获取当前点击的节点的label\n       \n        // console.log(checkedNodes[0].pathLabels) // 获取由 label 组成的数组\n      },\n      displayDiv3(val){\n        this.form.peopleId = this.value.id\n        // console.log(this.form)\n        this.querySceneryByPeopleName()\n      },\n      displayDiv4(val){\n        this.form.peopleId = this.value.id\n        // console.log(this.form)\n        this.querySceneryByPeopleName()\n      },\n\n      //查询诗人信息\n      queryPeople(){\n        this.$http.get(\"people\")\n        .then(response=>{\n          this.peopleName = response.data\n        })\n        .catch(function(error){\n          console.log(error)\n      })\n      },\n\n      \n  \n      //将分页查询的axios分装在方法中\n      querySceneryByPeopleName(){\n        this.$http.get(\"querySceneryByPeopleNamePage\",{\n        params:{\n          pageNum : this.pageNum,\n          pageSize : this.pageSize,\n          name : this.value.name,\n          \n        }\n      })\n      .then(response=>{\n        this.tableData = response.data.data\n        this.count = response.data.count\n        // console.log(this.tableData)\n      })\n      .catch(function(error){\n        console.log(error)\n      })\n      },\n  \n      // 重置两个搜索框\n      \n  \n      //监听操作按钮\n      handleEdit(index, row) {\n        this.updateVisible = true\n        this.form = row\n        // console.log(index, row);\n      },\n      //删除操作\n      //删除按钮\n      handleDelete(index, row) {\n        // console.log(row.id);\n         this.$confirm('此操作将永久删除该条信息, 是否继续?', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(() => {\n            this.$http.delete(\"/Scenery/\" + row.id).then(res=>{\n              if(res){\n                this.$message({\n                  type: 'success',\n                  message: '删除成功!'\n                })\n                this.querySceneryByPeopleName()\n              }\n            })\n          }).catch(() => {\n            this.$message({\n              type: 'info',\n              message: '已取消删除'\n            });          \n          });\n      },\n      //批量删除\n      handleSelectionChange(val){\n        this.multipleSelection = val\n      },\n      deleteMultipleCity(){\n        let ids = this.multipleSelection.map(v => v.id)\n        this.$confirm('此操作将永久删除该条信息, 是否继续?', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(() => {\n            this.$http.post(\"/Scenery/batch\",ids).then(res=>{\n              if(res){\n                this.$message({\n                  type: 'success',\n                  message: '删除成功!'\n                })\n                this.querySceneryByPeopleName()\n              }\n            })\n          }).catch(() => {\n            this.$message({\n              type: 'info',\n              message: '已取消删除'\n            });          \n          });\n      },\n      //监听pageNum\n       handleCurrentChange(pageNum){\n        // console.log(pageNum);\n        this.pageNum =pageNum\n        this.querySceneryByPeopleName()\n      },\n  \n      //监听pageSize的\n      handleSizeChange(pageSize){\n        // console.log(pageSize);\n        this.pageSize = pageSize\n        this.querySceneryByPeopleName()\n      },\n  \n      // 监听CityNameSearch\n      CitySearch(){\n        this.queryCity()\n      },\n  \n      // 监听CityProvinceSearch\n      ProvinceSearch(){\n        this.queryCity()\n      },\n  \n     \n  \n      //添加窗体的操作\n      //清空\n      clearInput(){\n              this.form.name = ''\n              this.form.introduction = ''\n          },\n      //添加和更新城市的函数\n      saveScenery(){\n        // this.form.peopleId = \n        this.$http.post(\"saveScenery\",this.form)\n              .then(res => {\n                  if(res){\n                    this.$message.success('保存成功');\n                    this.addVisible = false\n                    this.updateVisible = false\n                  }\n                  else{\n                    this.$message.error(\"保存失败\")\n                  }\n              })\n              .catch(function (error) {\n                  console.log(error);\n              })\n          this.querySceneryByPeopleName()\n      },\n      //添加城市信息\n      addScenery(){  \n        this.saveScenery()\n        this.querySceneryByPeopleName()\n        this.clearForm()\n      },\n      //删除图片\n      handleRemove(file) {\n        console.log(file);\n      },\n        //放大看图片函数\n      handlePictureCardPreview(file) {\n        this.dialogImageUrl = file.url;\n        this.dialogVisible = true;\n      },\n  \n      //更新城市信息\n      updateScenery(){\n        \n        this.saveScenery()\n        this.querySceneryByPeopleName()\n        this.clearForm()\n      },\n      //清空form中信息\n      clearForm(){\n        this.form.id = null,\n        this.form.peopleId = this.value.id,\n        this.form.name = \"\",\n        this.form.introduction = \"\",\n        this.form.picture = \"\"\n      },\n      // diolag点击叉叉后\n      reset(){\n          this.clearForm()\n          this.querySceneryByPeopleName()\n      },\n      // 新增的按钮\n      addButton(){\n        console.log(this.value)\n        if(this.value.id == null){\n          this.$message('请先选择诗人');\n        }\n        else{\n          this.addVisible = true\n        }\n      },\n      //批量删除按钮\n      deleteButton(){\n        if(this.value.id == null){\n          this.$message('请先选择诗人');\n        }\n        else{\n          this.deleteMultipleCity()\n        }\n      },\n      //上传图片\n      handle_success(res) {\n          console.log(res.data);\n          this.$message.success(\"图片上传成功\");\n          this.form.picture = res.data\n          \n        //   return (this.form.imgUrl = res.data);\n        },\n    },\n    watched : {\n      \n    }\n  };\n  </script>\n  \n  <style scoped>\n  \n  .el-pagination{\n    text-align: center;\n  }\n  .el-autocomplete{\n    width: 120px;\n  }\n  </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}