{"ast":null,"code":"export default {\n  name: \"CityManage\",\n  components: {},\n  mounted: function () {\n    // 查询左侧的一个诗人栏\n    this.queryPeople();\n\n    //一开始先进行一次查询表格\n    // this.querySceneryByPeopleName()\n\n    //查询cname搜索框\n    this.$http.get(\"queryCity\").then(response => {\n      for (let i = 0; i < response.data.length; i++) {\n        response.data[i].value = response.data[i].cname;\n        // this.autoCityNameSearch[i].value = response.data[i].cname\n      }\n\n      this.autoCityNameSearch = response.data;\n      // console.log(this.autoCityNameSearch)\n    }).catch(function (error) {\n      console.log(error);\n    });\n    //查询province搜索框\n    this.$http.get(\"queryProvince\").then(response => {\n      for (let i = 0; i < response.data.length; i++) {\n        response.data[i].value = response.data[i].province;\n      }\n      this.autoProvinceSearch = response.data;\n      // console.log(this.autoProvinceSearch)\n    }).catch(function (error) {\n      console.log(error);\n    });\n  },\n  data() {\n    return {\n      peopleName: [],\n      //对选框中的诗人姓名\n      search: \"\",\n      //搜索框的模糊查询\n      value: \"\",\n      //选择器中的值\n\n      tableData: [],\n      currentPage: 1,\n      //当前的\n      count: 0,\n      //分页查询页面总数\n      pageNum: 1,\n      //\n      pageSize: 100,\n      //默认的分页大小\n      CityNameSearch: \"\",\n      ProvinceNameSearch: \"\",\n      autoCityNameSearch: [],\n      autoProvinceSearch: [],\n      addVisible: false,\n      //添加的显示框\n      updateVisible: false,\n      //更新的显示框\n      form: {\n        peopleId: Number,\n        //诗人外键\n        name: '',\n        // 城市名\n        introduction: '',\n        //介绍\n        picture: '' //图片\n      },\n\n      multipleSelection: [],\n      dialogImageUrl: '',\n      dialogVisible: false,\n      imgUrl: '',\n      disabled: false,\n      test: '1683094157750.png',\n      peopleId: 1\n    };\n  },\n  methods: {\n    //选择器改变时 \n    displayDiv(val) {\n      // console.log(this)\n      // console.log(this.value)\n      // console.log(\n      //   this.$refs.PeopleSelect.selected.label,\n      //   this.$refs.PeopleSelect.selected.key\n      // );\n      // console.log(this.value)\n\n      this.form.peopleId = this.value.id;\n      // console.log(this.form)\n      this.querySceneryByPeopleName();\n    },\n    //查询诗人信息\n    queryPeople() {\n      this.$http.get(\"people\").then(response => {\n        this.peopleName = response.data;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    //将分页查询的axios分装在方法中\n    querySceneryByPeopleName() {\n      this.$http.get(\"querySceneryByPeopleNamePage\", {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.value.name\n        }\n      }).then(response => {\n        this.tableData = response.data.data;\n        this.count = response.data.count;\n        // console.log(this.tableData)\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    // 重置两个搜索框\n    refreshInput() {\n      this.CityNameSearch = \"\";\n      this.ProvinceNameSearch = \"\";\n      this.queryCity();\n    },\n    //监听操作按钮\n    handleEdit(index, row) {\n      this.updateVisible = true;\n      this.form = row;\n      // console.log(index, row);\n    },\n\n    //删除操作\n    //删除按钮\n    handleDelete(index, row) {\n      // console.log(row.id);\n      this.$confirm('此操作将永久删除该条信息, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$http.delete(\"/City/\" + row.id).then(res => {\n          if (res) {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n            this.queryCity();\n          }\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    //批量删除\n    handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    deleteMultipleCity() {\n      let ids = this.multipleSelection.map(v => v.id);\n      this.$confirm('此操作将永久删除该条信息, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$http.post(\"/City/batch\", ids).then(res => {\n          if (res) {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n            this.queryCity();\n          }\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    //监听pageNum\n    handleCurrentChange(pageNum) {\n      // console.log(pageNum);\n      this.pageNum = pageNum;\n      this.querySceneryByPeopleName();\n    },\n    //监听pageSize的\n    handleSizeChange(pageSize) {\n      // console.log(pageSize);\n      this.pageSize = pageSize;\n      this.querySceneryByPeopleName();\n    },\n    // 监听CityNameSearch\n    CitySearch() {\n      this.queryCity();\n    },\n    // 监听CityProvinceSearch\n    ProvinceSearch() {\n      this.queryCity();\n    },\n    //两个el-autocomplete的选择\n    handleSelect1(item) {\n      console.log(item.value);\n    },\n    querySearch1(queryString, cb) {\n      var results = queryString ? this.autoCityNameSearch.filter(this.createFilter(queryString)) : this.autoCityNameSearch;\n      cb(results);\n    },\n    handleSelect2(item) {\n      console.log(item.value);\n    },\n    querySearch2(queryString, cb) {\n      var results = queryString ? this.autoProvinceSearch.filter(this.createFilter(queryString)) : this.autoProvinceSearch;\n      cb(results);\n    },\n    createFilter(queryString) {\n      return item => {\n        return item.value.toUpperCase().match(queryString.toUpperCase());\n      };\n    },\n    //添加窗体的操作\n    //清空\n    clearInput() {\n      this.form.name = '';\n      this.form.introduction = '';\n    },\n    //添加和更新城市的函数\n    saveScenery() {\n      // this.form.peopleId = \n      this.$http.post(\"saveScenery\", this.form).then(res => {\n        if (res) {\n          this.$message.success('保存成功');\n          this.addVisible = false;\n          this.updateVisible = false;\n        } else {\n          this.$message.error(\"保存失败\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.querySceneryByPeopleName();\n    },\n    //添加城市信息\n    addScenery() {\n      this.saveScenery();\n      this.querySceneryByPeopleName();\n      this.clearForm();\n    },\n    //删除图片\n    handleRemove(file) {\n      console.log(file);\n    },\n    //放大看图片函数\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n    //更新城市信息\n    updateScenery() {\n      this.saveScenery();\n      this.querySceneryByPeopleName();\n      this.clearForm();\n    },\n    //清空form中信息\n    clearForm() {\n      this.form.id = null, this.form.peopleId = this.value.id, this.form.name = \"\", this.form.introduction = \"\", this.form.picture = \"\";\n    },\n    reset() {\n      this.clearForm();\n      this.querySceneryByPeopleName();\n    },\n    reseta() {\n      this.clearForm();\n      this.querySceneryByPeopleName();\n    }\n  },\n  watched: {\n    updateVisible: function (newval, oldval) {\n      console.log(newval);\n    }\n  }\n};","map":{"version":3,"mappings":"AA+IA;EACAA;EACAC,aACA;EACAC;IACA;IACA;;IAEA;IACA;;IAEA;IACA,4BACAC;MACA;QACAC;QACA;MACA;;MACA;MACA;IACA,GACAC;MACAC;IACA;IACA;IACA,gCACAH;MACA;QACAC;MACA;MACA;MACA;IACA,GACAC;MACAC;IACA;EACA;EAEAC;IACA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;;MAGAC;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MACAC;MACAC;MACAC;MACAC;MAAA;MACAC;MAAA;MACAC;QACAC;QAAA;QACAvB;QAAA;QACAwB;QAAA;QACAC;MACA;;MACAC;MAEAC;MACAC;MACAC;MACAC;MACAC;MAEAR;IAEA;EACA;EACAS;IACA;IACAC;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;IACA;IACA;IACAC;MACA,yBACA/B;QACA;MACA,GACAE;QACAC;MACA;IACA;IAGA;IACA6B;MACA;QACAC;UACAtB;UACAC;UACAf;QAEA;MACA,GACAG;QACA;QACA;QACA;MACA,GACAE;QACAC;MACA;IACA;IAEA;IACA+B;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA;IACA;;IACA;IACA;IACAC;MACA;MACA;QACAC;QACAC;QACAC;MACA;QACA;UACA;YACA;cACAA;cACAC;YACA;YACA;UACA;QACA;MACA;QACA;UACAD;UACAC;QACA;MACA;IACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;QACAL;QACAC;QACAC;MACA;QACA;UACA;YACA;cACAA;cACAC;YACA;YACA;UACA;QACA;MACA;QACA;UACAD;UACAC;QACA;MACA;IACA;IACA;IACAG;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA;IACA;IAEA;IACAC;MACA;IACA;IAEA;IACAC;MACA5C;IACA;IACA6C;MACA;MACAC;IACA;IACAC;MACA/C;IACA;IACAgD;MACA;MACAF;IACA;IACAG;MACA;QACA;MACA;IACA;IAEA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA;MACA,0CACAtD;QACA;UACA;UACA;UACA;QACA,OACA;UACA;QACA;MACA,GACAE;QACAC;MACA;MACA;IAEA;IACA;IACAoD;MAGA;MACA;MACA;IACA;IACA;IACAC;MACArD;IACA;IACA;IACAsD;MACA;MACA;IACA;IAEA;IACAC;MAEA;MACA;MACA;IACA;IACA;IACAC;MACA,qBACA,oCACA,qBACA,6BACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;EACA;EACAC;IACA5C;MACAf;IACA;EACA;AACA","names":["name","components","mounted","then","response","catch","console","data","peopleName","search","value","tableData","currentPage","count","pageNum","pageSize","CityNameSearch","ProvinceNameSearch","autoCityNameSearch","autoProvinceSearch","addVisible","updateVisible","form","peopleId","introduction","picture","multipleSelection","dialogImageUrl","dialogVisible","imgUrl","disabled","test","methods","displayDiv","queryPeople","querySceneryByPeopleName","params","refreshInput","handleEdit","handleDelete","confirmButtonText","cancelButtonText","type","message","handleSelectionChange","deleteMultipleCity","handleCurrentChange","handleSizeChange","CitySearch","ProvinceSearch","handleSelect1","querySearch1","cb","handleSelect2","querySearch2","createFilter","clearInput","saveScenery","addScenery","handleRemove","handlePictureCardPreview","updateScenery","clearForm","reset","reseta","watched"],"sourceRoot":"src/view/back/RouterMain/Scenery","sources":["SceneryManage.vue"],"sourcesContent":["<template>\n  <div>\n    <el-container>\n      \n      \n        <!-- 主页面查询 -->\n        <el-main>\n             <div style=\"margin-bottom:15px\">\n              <!-- 选择器 选择诗人 -->\n              <el-select v-model=\"value\" value-key=\"name\" filterable placeholder=\"请选择\" @change=\"displayDiv\" >\n                <el-option\n                  v-for=\"item in peopleName\"\n                  :key=\"item.id\"\n                  :label=\"item.name\"\n                  :value=\"item\"\n                  >\n                </el-option>\n              </el-select>\n\n                <el-button type=\"primary\" style=\"margin-left:15px\" @click=\"addVisible = true\"><i class=\"el-icon-plus\"></i>新增</el-button>\n                <el-button type=\"primary\" @click=\"deleteMultipleCity\"><i class=\"el-icon-plus\"></i>批量删除</el-button>\n                <el-button type=\"primary\" style=\"margin-right:10px\" @click=\"refreshInput\"><i class=\"el-icon-refresh-right\"></i>重置</el-button>\n                \n                城市搜索： <el-autocomplete @change=\"CitySearch\"\n                  class=\"inline-input\"\n                  v-model=\"CityNameSearch\"\n                  :fetch-suggestions=\"querySearch1\"\n                  placeholder=\"请输入城市\"\n                  @select=\"handleSelect1\"\n                  :trigger-on-focus=\"false\"\n                ></el-autocomplete>\n                省份搜索：<el-autocomplete @change=\"ProvinceSearch\"\n                  class=\"inline-input\"\n                  v-model=\"ProvinceNameSearch\"\n                  :fetch-suggestions=\"querySearch2\"\n                  placeholder=\"请输入省份\"\n                  @select=\"handleSelect2\"\n                  :trigger-on-focus=\"false\"\n                ></el-autocomplete> \n              </div>\n              \n              <!-- 分页查询的表格 -->\n              <el-table :data=\"tableData\"\n              border\n                @selection-change=\"handleSelectionChange\">\n                <el-table-column type=\"selection\"> </el-table-column>\n                <el-table-column prop=\"id\" label=\"id\" align=\"center\"> </el-table-column>\n                <el-table-column prop=\"name\" label=\"景点名称\" align=\"center\"> </el-table-column>\n                <el-table-column prop=\"introduction\" label=\"景点介绍\" align=\"center\" :show-overflow-tooltip=\"true\"> </el-table-column>\n                <el-table-column prop=\"picture\" label=\"图片\" align=\"center\"> </el-table-column>\n                <el-table-column align=\"center\"  label=\"操作\">\n                  <template slot-scope=\"scope\">\n                    <el-button\n                      size=\"mini\"\n                      @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n                    <el-button\n                      size=\"mini\"\n                      type=\"danger\"\n                      @click=\"handleDelete(scope.$index, scope.row)\">删除</el-button>\n                  </template>\n                </el-table-column>\n              </el-table>\n\n              <!-- 分页查询的 -->\n              <div class=\"block\" style=\"margin-top:15px\">\n                <el-pagination\n                  @size-change=\"handleSizeChange\"\n                  @current-change=\"handleCurrentChange\"\n                  :current-page=\"currentPage\"\n                  :page-size=\"100\"\n                  :page-sizes=\"[2, 5, 8, 100]\"   \n                  layout=\"total, sizes, prev, pager, next, jumper\"\n                  :total=\"count\">\n                </el-pagination>\n              </div>\n\n              <!--添加按钮的代码-->\n              <el-dialog title=\"添加城市景点信息\" :visible.sync=\"addVisible\" width=\"50%\" @close=\"reseta\">\n                <el-form ref=\"form\" :model=\"form\" label-width=\"80px\">\n                      <el-form-item label=\"景点名称\">\n                          <el-input v-model=\"form.name\"></el-input>\n                      </el-form-item>\n                      <el-form-item label=\"景点名称\">\n                          <el-input v-model=\"form.peopleId\"></el-input>\n                      </el-form-item>\n                      <el-form-item label=\"景点介绍\">\n                        <el-input :rows=\"5\" type=\"textarea\" v-model=\"form.introduction\"></el-input>\n                      </el-form-item>\n                      \n                      <!-- 上传照片 :on-success=\"handle_success\" -->\n                      上传景点图片限一张\n                      <el-upload \n                        action=\"http://localhost:8088/file/upload\"\n                        \n                        list-type=\"picture-card\"\n                        :on-preview=\"handlePictureCardPreview\"\n                        :on-remove=\"handleRemove\"\n                        :limit=\"1\"\n                        >\n                        <div slot=\"tip\" class=\"el-upload__tip\">\n                            只能上传jpg/png文件，且不超过500kb\n                        </div>\n                        <i class=\"el-icon-plus\"></i>\n                      </el-upload>\n\n                      <el-dialog :visible.sync=\"dialogVisible\">\n                        <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\">\n                      </el-dialog>\n                      \n                      <el-form-item>\n                          <el-button type=\"primary\" @click=\"addScenery\">添加</el-button>\n                          <el-button @click=\"clearInput\">重置</el-button>\n                      </el-form-item>\n                </el-form>\n              </el-dialog>\n\n              <!--更新的按钮-->\n              <el-dialog title=\"更新城市信息\" :visible.sync=\"updateVisible\" width=\"50%\" @close=\"reset\" >\n                <el-form ref=\"form\" :model=\"form\" label-width=\"80px\">\n                      <el-form-item label=\"景点名称\">\n                          <el-input v-model=\"form.name\"></el-input>\n                      </el-form-item>\n                      <el-form-item label=\"景点介绍\">\n                        <el-input :rows=\"5\" type=\"textarea\" v-model=\"form.introduction\"></el-input>\n                      </el-form-item>\n                      \n                      <el-form-item label=\"图片\">\n                          <el-input v-model=\"form.picture\"></el-input>\n                      </el-form-item>\n                      <el-form-item>\n                          <el-button type=\"primary\" @click=\"updateScenery\">保存</el-button>\n                          <!-- <el-button @click=\"clearInput\">重置</el-button> -->\n                      </el-form-item>\n                </el-form>\n              </el-dialog>\n                  </el-main>\n              </el-container>\n\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: \"CityManage\",\n  components:{\n  },\n  mounted:function(){\n    // 查询左侧的一个诗人栏\n    this.queryPeople()\n\n    //一开始先进行一次查询表格\n    // this.querySceneryByPeopleName()\n\n    //查询cname搜索框\n    this.$http.get(\"queryCity\")\n      .then(response=>{\n        for(let i = 0; i < response.data.length; i++){\n          response.data[i].value = response.data[i].cname\n          // this.autoCityNameSearch[i].value = response.data[i].cname\n        }\n        this.autoCityNameSearch = response.data\n        // console.log(this.autoCityNameSearch)\n      })\n      .catch(function(error){\n        console.log(error)\n      })\n      //查询province搜索框\n    this.$http.get(\"queryProvince\")\n      .then(response=>{\n        for(let i = 0; i < response.data.length; i++){\n          response.data[i].value = response.data[i].province\n        }\n      this.autoProvinceSearch = response.data\n      // console.log(this.autoProvinceSearch)\n    })\n    .catch(function(error){\n      console.log(error)\n    })\n  },\n  \n  data() {\n    return {\n      peopleName : [],//对选框中的诗人姓名\n      search : \"\",//搜索框的模糊查询\n      value : \"\",//选择器中的值\n\n      \n      tableData : [],\n      currentPage : 1,//当前的\n      count : 0,//分页查询页面总数\n      pageNum : 1,//\n      pageSize : 100,//默认的分页大小\n      CityNameSearch : \"\",\n      ProvinceNameSearch : \"\",\n      autoCityNameSearch : [],\n      autoProvinceSearch : [],\n      addVisible : false,//添加的显示框\n      updateVisible : false,//更新的显示框\n      form: {\n                peopleId : Number,//诗人外键\n                name: '', // 城市名\n                introduction: '', //介绍\n                picture: '', //图片\n            },\n      multipleSelection : [],\n\n      dialogImageUrl: '',\n      dialogVisible: false,\n      imgUrl : '', \n      disabled: false,\n      test : '1683094157750.png',\n\n      peopleId : 1,\n      \n    }\n  },\n  methods:{\n    //选择器改变时 \n    displayDiv(val){\n     \n      // console.log(this)\n      // console.log(this.value)\n      // console.log(\n      //   this.$refs.PeopleSelect.selected.label,\n      //   this.$refs.PeopleSelect.selected.key\n      // );\n      // console.log(this.value)\n      \n      this.form.peopleId = this.value.id\n      // console.log(this.form)\n      this.querySceneryByPeopleName()\n    },\n    //查询诗人信息\n    queryPeople(){\n      this.$http.get(\"people\")\n      .then(response=>{\n        this.peopleName = response.data\n      })\n      .catch(function(error){\n        console.log(error)\n    })\n    },\n    \n\n    //将分页查询的axios分装在方法中\n    querySceneryByPeopleName(){\n      this.$http.get(\"querySceneryByPeopleNamePage\",{\n      params:{\n        pageNum : this.pageNum,\n        pageSize : this.pageSize,\n        name : this.value.name,\n        \n      }\n    })\n    .then(response=>{\n      this.tableData = response.data.data\n      this.count = response.data.count\n      // console.log(this.tableData)\n    })\n    .catch(function(error){\n      console.log(error)\n    })\n    },\n\n    // 重置两个搜索框\n    refreshInput(){\n      this.CityNameSearch = \"\"\n      this.ProvinceNameSearch = \"\"\n      this.queryCity()\n    },\n\n    //监听操作按钮\n    handleEdit(index, row) {\n      this.updateVisible = true\n      this.form = row\n      // console.log(index, row);\n    },\n    //删除操作\n    //删除按钮\n    handleDelete(index, row) {\n      // console.log(row.id);\n       this.$confirm('此操作将永久删除该条信息, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          this.$http.delete(\"/City/\" + row.id).then(res=>{\n            if(res){\n              this.$message({\n                type: 'success',\n                message: '删除成功!'\n              })\n              this.queryCity()\n            }\n          })\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          });          \n        });\n    },\n    //批量删除\n    handleSelectionChange(val){\n      this.multipleSelection = val\n    },\n    deleteMultipleCity(){\n      let ids = this.multipleSelection.map(v => v.id)\n      this.$confirm('此操作将永久删除该条信息, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          this.$http.post(\"/City/batch\",ids).then(res=>{\n            if(res){\n              this.$message({\n                type: 'success',\n                message: '删除成功!'\n              })\n              this.queryCity()\n            }\n          })\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          });          \n        });\n    },\n    //监听pageNum\n     handleCurrentChange(pageNum){\n      // console.log(pageNum);\n      this.pageNum =pageNum\n      this.querySceneryByPeopleName()\n    },\n\n    //监听pageSize的\n    handleSizeChange(pageSize){\n      // console.log(pageSize);\n      this.pageSize = pageSize\n      this.querySceneryByPeopleName()\n    },\n\n    // 监听CityNameSearch\n    CitySearch(){\n      this.queryCity()\n    },\n\n    // 监听CityProvinceSearch\n    ProvinceSearch(){\n      this.queryCity()\n    },\n\n    //两个el-autocomplete的选择\n    handleSelect1(item) {\n        console.log(item.value);\n    },\n    querySearch1(queryString,cb){\n       var results = queryString ? this.autoCityNameSearch.filter(this.createFilter(queryString)) : this.autoCityNameSearch;\n       cb(results);\n    },\n    handleSelect2(item) {\n        console.log(item.value);\n    },\n    querySearch2(queryString,cb){\n       var results = queryString ? this.autoProvinceSearch.filter(this.createFilter(queryString)) : this.autoProvinceSearch;\n       cb(results);\n    },\n    createFilter(queryString) {\n      return (item) => {\n        return item.value.toUpperCase().match(queryString.toUpperCase());\n      };\n    },\n\n    //添加窗体的操作\n    //清空\n    clearInput(){\n            this.form.name = ''\n            this.form.introduction = ''\n        },\n    //添加和更新城市的函数\n    saveScenery(){\n      // this.form.peopleId = \n      this.$http.post(\"saveScenery\",this.form)\n            .then(res => {\n                if(res){\n                  this.$message.success('保存成功');\n                  this.addVisible = false\n                  this.updateVisible = false\n                }\n                else{\n                  this.$message.error(\"保存失败\")\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n        this.querySceneryByPeopleName()\n        \n    },\n    //添加城市信息\n    addScenery(){\n      \n      \n      this.saveScenery()\n      this.querySceneryByPeopleName()\n      this.clearForm()\n    },\n    //删除图片\n    handleRemove(file) {\n      console.log(file);\n    },\n      //放大看图片函数\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n\n    //更新城市信息\n    updateScenery(){\n      \n      this.saveScenery()\n      this.querySceneryByPeopleName()\n      this.clearForm()\n    },\n    //清空form中信息\n    clearForm(){\n      this.form.id = null,\n      this.form.peopleId = this.value.id,\n      this.form.name = \"\",\n      this.form.introduction = \"\",\n      this.form.picture = \"\"\n    },\n    reset(){\n        this.clearForm()\n        this.querySceneryByPeopleName()\n    },\n    reseta(){\n        this.clearForm()\n        this.querySceneryByPeopleName()\n    },\n  },\n  watched : {\n    updateVisible:function(newval,oldval){\n      console.log(newval)\n    }\n  }\n};\n</script>\n\n<style scoped>\n\n.el-pagination{\n  text-align: center;\n}\n.el-autocomplete{\n  width: 120px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}