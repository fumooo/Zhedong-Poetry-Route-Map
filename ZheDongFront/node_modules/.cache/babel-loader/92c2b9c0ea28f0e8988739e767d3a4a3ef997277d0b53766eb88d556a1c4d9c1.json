{"ast":null,"code":"//在src下创建一个store文件夹，其中去创建index.js来创建Vuex中最为核心的store\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport axios from 'axios';\nVue.use(Vuex);\n// Vue.prototype.$http = axios\naxios.defaults.baseURL = \"http://localhost:8088\";\n\n//准备state--用于存储数据\nconst state = {\n  checkListDate: [],\n  poemList: [] //此数组 用于存储用户点击诗人的多选框诗人id\n};\n\n//准备mutations -- 仅仅用于操作数据（state） state指是state数据域，response指的是传过来的数据\nconst mutations = {\n  //重制刷新页面\n  REFRESH(state, response) {\n    state.checkListDate = response;\n  },\n  //更新左边的菜单栏\n  updateLeftNav(state, reponse) {\n    state.checkListDate = reponse;\n  }\n};\n\n//准备actions--用于响应组件中动作\nconst actions = {\n  refresh({\n    commit\n  }) {\n    axios.get(\"people\").then(response => {\n      commit('REFRESH', response.data);\n    }).catch(function (error) {\n      // 处理错误情况\n      console.log(error);\n    });\n  },\n  updateLeftNav({\n    commit\n  }, data) {\n    axios.get(\"people/mohu\", {\n      params: {\n        name: data\n      }\n    }).then(response => {\n      commit('updateLeftNav', response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n};\n\n//创建并暴露store\nexport default new Vuex.Store({\n  actions,\n  mutations,\n  state\n});","map":{"version":3,"names":["Vue","Vuex","axios","use","defaults","baseURL","state","checkListDate","poemList","mutations","REFRESH","response","updateLeftNav","reponse","actions","refresh","commit","get","then","data","catch","error","console","log","params","name","Store"],"sources":["/Users/fuxiaolong/Project/浙东前端/src/store/index.js"],"sourcesContent":["//在src下创建一个store文件夹，其中去创建index.js来创建Vuex中最为核心的store\nimport Vue from \"vue\"\nimport Vuex from \"vuex\"\nimport axios from 'axios';\nVue.use(Vuex)\n// Vue.prototype.$http = axios\naxios.defaults.baseURL = \"http://localhost:8088\"\n\n//准备state--用于存储数据\nconst state = {\n    checkListDate:[],\n    poemList:[],//此数组 用于存储用户点击诗人的多选框诗人id\n}\n\n//准备mutations -- 仅仅用于操作数据（state） state指是state数据域，response指的是传过来的数据\nconst mutations = {\n    //重制刷新页面\n    REFRESH(state,response){\n        state.checkListDate = response \n    },\n\n    //更新左边的菜单栏\n    updateLeftNav(state,reponse){\n        state.checkListDate = reponse\n    }\n}\n\n//准备actions--用于响应组件中动作\nconst actions = {\n    refresh({commit}){\n        axios.get(\"people\").then((response)=>{\n        commit('REFRESH',response.data)       \n    }).catch(function (error) {\n        // 处理错误情况\n        console.log(error);\n      })\n    },\n\n    updateLeftNav({commit},data){\n        axios.get(\"people/mohu\",{\n            params: {\n            name: data\n           }\n         })\n         .then((response)=>{\n            commit('updateLeftNav',response.data)\n         }) \n         .catch(function (error) {\n           console.log(error);\n         }) \n    },\n    \n}\n\n//创建并暴露store\nexport default new Vuex.Store({\n    actions,\n    mutations,\n    state,\n})"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AACzBF,GAAG,CAACG,GAAG,CAACF,IAAI,CAAC;AACb;AACAC,KAAK,CAACE,QAAQ,CAACC,OAAO,GAAG,uBAAuB;;AAEhD;AACA,MAAMC,KAAK,GAAG;EACVC,aAAa,EAAC,EAAE;EAChBC,QAAQ,EAAC,EAAE,CAAC;AAChB,CAAC;;AAED;AACA,MAAMC,SAAS,GAAG;EACd;EACAC,OAAO,CAACJ,KAAK,EAACK,QAAQ,EAAC;IACnBL,KAAK,CAACC,aAAa,GAAGI,QAAQ;EAClC,CAAC;EAED;EACAC,aAAa,CAACN,KAAK,EAACO,OAAO,EAAC;IACxBP,KAAK,CAACC,aAAa,GAAGM,OAAO;EACjC;AACJ,CAAC;;AAED;AACA,MAAMC,OAAO,GAAG;EACZC,OAAO,CAAC;IAACC;EAAM,CAAC,EAAC;IACbd,KAAK,CAACe,GAAG,CAAC,QAAQ,CAAC,CAACC,IAAI,CAAEP,QAAQ,IAAG;MACrCK,MAAM,CAAC,SAAS,EAACL,QAAQ,CAACQ,IAAI,CAAC;IACnC,CAAC,CAAC,CAACC,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtB;MACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ,CAAC;EAEDT,aAAa,CAAC;IAACI;EAAM,CAAC,EAACG,IAAI,EAAC;IACxBjB,KAAK,CAACe,GAAG,CAAC,aAAa,EAAC;MACpBO,MAAM,EAAE;QACRC,IAAI,EAAEN;MACP;IACF,CAAC,CAAC,CACDD,IAAI,CAAEP,QAAQ,IAAG;MACfK,MAAM,CAAC,eAAe,EAACL,QAAQ,CAACQ,IAAI,CAAC;IACxC,CAAC,CAAC,CACDC,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACP;AAEJ,CAAC;;AAED;AACA,eAAe,IAAIpB,IAAI,CAACyB,KAAK,CAAC;EAC1BZ,OAAO;EACPL,SAAS;EACTH;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}